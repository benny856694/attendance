<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HaSdkWrapper</name>
    </assembly>
    <members>
        <member name="P:HaSdkWrapper.AlarmRecordEventArgs.CameraID">
            <summary>
            相机编号
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRecordEventArgs.PersonID">
            <summary>
            人员id，开闸的人员id
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRecordEventArgs.AlarmTime">
            <summary>
            请求时间 格式：2018/3/6 16:38:20
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRecordEventArgs.AlarmDeviceType">
            <summary>
            请求的开闸设备类型，0：继电器 1：韦根设备
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRecordEventArgs.AlarmDeviceId">
            <summary>
            开闸设备id，外设类型为继电器时，外设ID为GPIO端口号。外设类型为支持韦根协议的设备时，外设ID为卡号。
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRequestEventArgs.CameraID">
            <summary>
            相机编号
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRequestEventArgs.PersonID">
            <summary>
            人员id，需要开闸的人员id
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRequestEventArgs.RequestTime">
            <summary>
            请求时间 格式：2018/3/6 16:38:20
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRequestEventArgs.AlarmDeviceType">
            <summary>
            请求的开闸设备类型，0：继电器 1：韦根设备
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRequestEventArgs.AlarmDeviceState">
            <summary>
            当前开闸设备状态，0：未启用 1：启用
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRequestEventArgs.AlarmDeviceId">
            <summary>
            开闸设备id，外设类型为继电器时，外设ID为GPIO端口号。外设类型为支持韦根协议的设备时，外设ID为卡号。
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRequestEventArgs.Cancel">
            <summary>
            是否响应此次请求；由事件处理程序设置此值，如果设置为false则会通过此次请求（即向设备发出开闸指令）；默认为false
            </summary>
        </member>
        <member name="P:HaSdkWrapper.AlarmRequestEventArgs.body_temp">
            <summary>
            体温
            </summary>
        </member>
        <member name="T:HaSdkWrapper.ConfigTemplate.FtpClientParam">
            FTP上传参数。
        </member>
        <member name="T:HaSdkWrapper.ConfigTemplate.FaceExtraParam">
            人脸应用附加参数。
        </member>
        <member name="P:HaSdkWrapper.ConfigTemplate.DeviceNo">
            <summary>
            获取或设置设备编号
            </summary>
        </member>
        <member name="P:HaSdkWrapper.ConfigTemplate.AddrID">
            <summary>
            获取或设置点位编号
            </summary>
        </member>
        <member name="P:HaSdkWrapper.ConfigTemplate.AddrName">
            <summary>
            获取或设置点位名称
            </summary>
        </member>
        <member name="M:HaSdkWrapper.ConfigTemplate.#ctor(HaSdkWrapper.HaCamera)">
            <summary>
            从一个已连接的设备创建配置模板
            </summary>
        </member>
        <member name="M:HaSdkWrapper.ConfigTemplate.UpdateToCamera(HaSdkWrapper.HaCamera)">
            <summary>
            将配置更新到某个设备
            </summary>
        </member>
        <member name="M:HaSdkWrapper.ConfigTemplate.#ctor(System.String)">
            <summary>
            从一个导出的模板文件还原配置模板
            </summary>
        </member>
        <member name="M:HaSdkWrapper.ConfigTemplate.SaveToFile(System.String)">
            <summary>
            将模板导出为文件
            </summary>
        </member>
        <member name="M:HaSdkWrapper.ConfigTemplate.op_Implicit(HaSdkWrapper.ConfigTemplate)~System.Byte[]">
            <summary>
            隐士的类型转换，当可以在代码中将本对象序列化为字节数组，方便网络传输等
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.SequenceID">
            <summary>
            <para>抓拍序号，从1开始，每产生一组抓拍数据增加1。</para>
            <EN>The sequence number of the captured face, increased by 1 for every capture</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.CameraID">
            <summary>
            <para>相机编号</para>
            <EN>Camera id</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.AddrID">
            <summary>
            <para>点位编号</para>
            <EN>Position id</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.AddrName">
            <summary>
            <para>点位名称</para>
            <EN>Position name</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.CaptureTime">
            <summary>
            <para>抓拍时间</para>
            <EN>Capture time</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IsRealTimeData">
            <summary>
            <para>实时抓拍标志，true表示是实时数据，false表示历史数据</para>
            <EN>Realtime data flag, true: realtime data, false: history data</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IsPersonMatched">
            <summary>
            <para>是否对比到库中的模板, true表示对比到库中的人 false表示当前抓拍未比中库中模板</para>
            <EN>Whether the captured face matches the face database - True: matches, False: doesn't match</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.MatchScore">
            <summary>
            <para>相似度</para>
            <EN>The matching score</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.PersonID">
            <summary>
            <para>人物编号，只有对比到人脸才有值</para>
            <EN>Face id if any matches found, null if none</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.PersonName">
            <summary>
            <para>人物姓名, 只有对比到人脸才有值</para>
            <EN>Name of the face if match found, null if none</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.PersonRole">
            <summary>
            <para>角色0：普通人员。 1：白名单人员。 2：黑名单人员</para>
            <EN>Type of the face - 0：normal, 1：white name, 2：black name</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.EnvironmentImageData">
            <summary>
            <para>大图数据（JPEG格式图片的全部数据，包括文件头），可能为空表示没有传输大图</para>
            <EN>The full image in jpeg format, null if not configured to transfer</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.FaceInEnvironment">
            <summary>
            <para>人脸在大图中的区域（没有大图时这个值可能是空值或者默认值）</para>
            <EN>The face part of the image</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.FeatureImageData">
            <summary>
            <para>特写图数据（JPEG格式图片的全部数据，包括文件头），可能为空表示没有传输特写图，一般来说特写图就是人脸图，不过不排除是头肩部的截取</para>
            <EN>Close-up face image</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.FaceInFeature">
            <summary>
            <para>人脸在特写图中的区域（没有特写图时这个值可能是空值或者默认值）</para>
            <EN>Face bound in the close-up image</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.VideoData">
            <summary>
            <para>视频数据（可能为空表示没有视频数据）</para>
            <EN>video data</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.VideoStartTime">
            <summary>
            <para>视频开始时间</para>
            <EN>Video start time</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.VideoEndTime">
            <summary>
            <para>视频结束时间</para>
            <EN>Video end time</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.Sex">
            <summary>
            <para>性别 0：未知 1：男 2：女</para>
            <EN>Gender - 0: unknown, 1: male, 2: female</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.Age">
            <summary>
            <para>年龄 0：未知</para>
            <EN>Age - 0: unknown</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.QValue">
            <summary>
            <para>人脸标准度 0：未计算 1~100：一个表示人脸角度和光线/噪点等质量因素的值，越大越好（即越大角度越正，光线越均匀，像素越平坦）</para>
            <EN>The quality of the image, the bigger the better</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.FeatureData">
            <summary>
            <para>抓拍图特征值数据</para>
            <EN>The feature data of the image</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.ModelFaceImageData">
            <summary>
            <para>比中的模板图（JPEG格式图片的全部数据，包括文件头）</para>
            <EN>Matched face image from face database in jpeg format</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.hatColour">
            <summary>
            <para>安全帽 1蓝 2橙色 3红色 4白色 5黄色</para>
            <EN>Safety helmet color - 1: blue 2: orange 3: red 4: white 5: yellow</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.living">
            <summary>
            <para>是否活体 0：无此信息 1：活体 2：非活体</para>
            <EN>Liveness detected - 0: unknown, 1: yes, 2: no</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.dev_id">
            <summary>
            <para>设备序列号</para>
            <EN>SN of the device</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.existIDCard">
            <summary>
            <para>是否存在身份证信息</para>
            <EN>Has id card info</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IDCardnumber">
            <summary>
            <para>身份证号</para>
            <EN>Id card number</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IDCardname">
            <summary>
            <para>姓名</para>
            <EN>Id card name</EN>
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceCapturedEventArgs.IDCardsex">
            <summary>
            <para>性别</para>
            <EN>Id card gender</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IDCardnational">
            <summary>
            <para>民族</para>
            <EN>Id card nationality</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IDCardbirth">
            <summary>
            <para>出生日期</para>
            <EN>Id card birthday</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IDCardresidence_address">
            <summary>
            <para>地址</para>
            <EN>Id card address</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IDCardorgan_issue">
            <summary>
            <para>签发机关</para>
            <EN>Id card issued by</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IDCardvalid_date_start">
            <summary>
            <para>有效期起始时间</para>
            <EN>Id card valid from</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.IDCardvalid_date_end">
             <summary>
            有效期截止时间
            <EN>Id card valid to</EN>
             </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.userParam">
            <summary>
            <para>自定义字段</para>
            <EN>User defined data</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.matchtype">
            <summary>
            <para>抓拍类型</para>
            <EN>Match type</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.wgCardNO">
            <summary>
            <para>32位伟根</para>
            <EN>32-bit Wiegand No.</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.wgCardNOLong">
            <summary>
            <para>64位伟根</para>
            <EN>64-bit Wiegand No.</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.temperature">
            <summary>
            <para>体温</para>
            <EN>Temperature</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceCapturedEventArgs.hasMask">
            <summary>
            <para>是否佩戴口罩 0:无此信息 1:已佩戴口罩 2:未佩戴口罩</para>
            <EN>Wears mask - 0: unknown, 1: wears, 2: doesn't wear</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceEntity.PersonID">
            <summary>
            人员编号
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceEntity.PersonName">
            <summary>
            人员姓名
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceEntity.PersonRole">
            <summary>
            人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceEntity.FeatureData">
            <summary>
            特征值数据
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceEntity.ImageData">
            <summary>
            模板图数据
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceEntity.WiegandNo">
            <summary>
            韦根门禁卡号
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceEntity.EffectTime">
            <summary>
            有效期止
            </summary>
        </member>
        <member name="P:HaSdkWrapper.FaceEntity.EffectStartTime">
            <summary>
            有效起始
            </summary>
        </member>
        <member name="E:HaSdkWrapper.HaCamera.ConnectStateChanged">
            <summary>
            连接状态发生变化
            </summary>
        </member>
        <member name="E:HaSdkWrapper.HaCamera.FaceCaptured">
            <summary>
            <para>收到人脸抓拍触发的事件</para>
            <EN>Face captured event</EN>
            </summary>
        </member>
        <member name="E:HaSdkWrapper.HaCamera.egGpioInput">
            <summary>
            收到刷卡获取伟根号或GPIO事件
            </summary>
        </member>
        <member name="E:HaSdkWrapper.HaCamera.egQRcodeInput">
            <summary>
            收到二维码事件
            </summary>
        </member>
        <member name="E:HaSdkWrapper.HaCamera.DeviceDiscovered">
            <summary>
            <para>搜索设备得到一条结果时触发的事件</para>
            <EN>Device discovered event</EN>
            </summary>
        </member>
        <member name="E:HaSdkWrapper.HaCamera.SerialDataArrived">
            <summary>
            收到串口数据时的事件
            </summary>
        </member>
        <member name="E:HaSdkWrapper.HaCamera.AlarmRequestReceived">
            <summary>
            收到设备请求开闸请求时产生的事件
            </summary>
        </member>
        <member name="E:HaSdkWrapper.HaCamera.AlarmRecordReceived">
            <summary>
            收到设备开闸记录时产生的事件
            </summary>
        </member>
        <member name="P:HaSdkWrapper.HaCamera.Ip">
            <summary>
            <para>相机ip</para>
            <EN>IP of the camera</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.HaCamera.Port">
            <summary>
            相机的端口号，缺省为9527
            <EN>Port number, default 9527</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.HaCamera.Username">
            <summary>
            <para>登录用户名</para>
            <EN>User name</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.HaCamera.Password">
            <summary>
            登录密码
            <EN>Password</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.HaCamera.Connected">
            <summary>
            连接状态
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.InitEnvironment">
            <summary>
            <para>新版的sdk底层自行管理内存，无需设置预期连接数</para>
            <EN>Initialize the SDK</EN>
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.InitEnvironment(System.UInt32)">
            <summary>
            <para>初始化SDK底层库，在进程中应该只需要调用一次，除非是需要在不关闭进程的情况下更改连接数或者清理内存。如果需要更改连接数或者清理内存，则需要先DeInit之后再行Init</para>
            <EN>Initialize the SDK, should be called only once unless you want to change connection number without exiting the process, if you want to change connection number, you should DeInit then call Init again</EN>
            </summary>
            <param name="maxConnectNum">
            <para>需要最大连接的设备数量；请尽量设置小额数量，因为程序会为每一个预期的连接立即分配内存</para>
            <EN>Max number of connections: SDK preallocates memory for every connection, bigger number consumes more memory</EN>
            </param>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.DeInitEnvironment">
            <summary>
            卸载SDK底层库，理论上无需调用此函数，可待其随进程自行退出
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetEnvironmentVersion">
            <summary>
            <para>获取SDK版本</para>
            <para>这个值不做参考</para>
            </summary>
            <returns>SDK版本</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetSDKPazzword(System.String)">
            <summary>
            <para>设置sdk二级密码, sdk内部会用这个密码去连接设备</para>
            <EN>SDK password, used to authenticate connection to camera</EN>
            </summary>
            <param name="password">
            二级密码
            <EN>SDK Password</EN>
            </param>
            <returns>
            是否设置成功
            <EN>True: success, False: fail</EN>
            </returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.DiscoverDevice">
            <summary>
            <para>搜索设备，需要通过DeviceDiscovered事件接收发现的设备</para>
            <EN>Start searching devices, the result will be notified through DeviceDiscovered event</EN>
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ValidImage(System.Byte[])">
            <summary>
            <para>校验图片是否可用于模板下发</para>
            <para>即判定图片中是否有清晰正面人脸</para>
            </summary>
            <param name="imgData">图片数据(使用File.RadAllBytes直接读取文件内容传入)</param>
            <returns>图片是否可下发</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.TwistImage(System.Byte[])">
            <summary>
            从图片生成缩略图和归一化图（用于用于纯协议对接）
            </summary>
            <param name="image">原始图片数据（通过File.ReadAllBytes读出来的）</param>
            <returns>如果检测到人脸且符合要求，则返回两个元素的数组，第一个元素是缩略图，第二个元素是归一化图，如果使用协议对接，则直接将其封入数据包即可（http协议的话就直接转成base64放入特定位置即可）；如果检测人脸失败或人脸不符合要求，则返回null</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetJpgFeatureImageNew(System.Byte[])">
            <summary>
            从图片生成新缩略图和归一化图（用于用于纯协议对接）
            </summary>
            <param name="jpg">如果检测到人脸且符合要求，则返回两个元素的数组，第一个元素是缩略图，第二个元素是归一化图,第三个为错误码</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetJpgFeatureImageNew(System.Byte[],System.String)">
            <summary>
            从图片生成新缩略图和归一化图（用于用于纯协议对接）
            </summary>
            <param name="jpg">如果检测到人脸且符合要求，则返回两个元素的数组，第一个元素是缩略图，第二个元素是归一化图,第三个为错误码</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_FeatureConvert(System.Byte[],System.String)">
            <summary>
            传入新归一化图和版本信息获取最终的归一化图
            </summary>
            <param name="twist_image">新归一化图</param>
            <param name="twist_version">版本信息 由设备获得</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetFaceCheckEnable(System.Boolean)">
            <summary>
            设置注册时人脸质量校验开关
            </summary>
            <param name="checkFaceQuality">是否开启人脸质量校验</param>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetLastError">
            <summary>
            获取上次错误码
            </summary>
            <returns>上次操作的错误码</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetErrorDescribe(System.Int32)">
            <summary>
            获取错误码对应文字描述
            </summary>
            <param name="errorCode">错误码</param>
            <returns>文字描述</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.Connect">
            <summary>
            连接相机（不播放视频）
            </summary>
            <returns>是否链接成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.Connect(System.IntPtr)">
            <summary>
            <para>连接相机</para>
            <EN>Connect to the Camera</EN>
            </summary>
            <param name="hwnd">
            <para>窗口的句柄，显示实时视频用，不需要显示视频的时候，传入default(IntPtr)</para>
            <EN>Handle to the window in which live video is rendered</EN>
            </param>
            <returns>
            <para>是否连接成功</para>
            <EN>True: connect successfully, False: failed to connect</EN>
            </returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.Connectnovideo">
            <summary>
            连接相机不开视频
            </summary>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.StartPlay(System.IntPtr)">
            <summary>
            播放设备实时画面
            </summary>
            <param name="hwnd">需要显示的控件句柄</param>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.StopPlay">
            <summary>
            停止设备实时画面预览
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.Trigger">
            <summary>
            软触发
            </summary>
            <returns>是否成功，如果失败需要排查错误</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFace(System.String,System.String,System.Int32,System.String,System.UInt32,System.UInt32,System.UInt32,System.Byte,System.String)">
            <summary>
            <para>添加一张人脸模板到设备库中</para>
            <EN>Add one face to camera database</EN>
            </summary>
            <param name="personID">
            <para>人员编号</para>
            <EN>Id of the face</EN>
            </param>
            <param name="personName">
            <para>人员姓名</para>
            <EN>Name</EN>
            </param>
            <param name="picPath">
            <para>图片路径</para>
            <EN>Full path to the image</EN>
            </param>
            <param name="personRole">
            <para>人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。</para>
            <EN>Type of the face - 0: normal, 1: white name, 2: black name</EN>
            </param>
            <param name="wgNo">
            <para>韦根卡号</para>
            <EN>Wiegand card number</EN>
            </param>
            <param name="effectTime">
            <para>过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数</para>
            <EN>Expiration time - 0xFFFFFFFF: never expire, 0: always expired, other value: utc seconds</EN>
            </param>
            <returns>
            <para>是否添加成功</para>
            <EN>True: success, False: fail</EN>
            </returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFace(System.String,System.String,System.Int32,System.String[],System.UInt32,System.UInt32)">
            <summary>
            添加一组图片到同一人员中
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picPaths">图片路径（最多五张图片）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFace(System.String,System.String,System.Int32,System.Byte[],System.UInt32,System.UInt32,System.UInt32,System.Byte,System.String)">
            <summary>
            添加一张人脸模板到设备库中
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="picData">图片数据（图片完整数据，通过File.ReadAllBytes读出来的）</param>
            <param name="personRole">人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_FaceJpgLegal(System.Byte[])">
            <summary>
            检测图片
            </summary>
            <param name="picData"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFace(System.String,System.String,System.Int32,System.Byte[][],System.UInt32,System.UInt32)">
            <summary>
            添加一组图片到同一人员中
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picDatas">图片数据（最多五张图片，需要图片完整数据，通过File.ReadAllBytes读出来的）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFace(HaSdkWrapper.HaCamera[],System.Int32@,System.Boolean,System.String,System.String,System.Int32,System.String[],System.UInt32,System.UInt32)">
            <summary>
            <para>添加一组图片到同一人员中</para>
            <para>下发到多个设备</para>
            <para>如果参数错误，则不会将错误码设置到逐个设备而直接返回</para>
            <para>注意，此函数暂不支持多张图片选择性下发，如果发现有不合格的图片，则会全部不予下发</para>
            </summary>
            <param name="cameras">需要下发的设备列表</param>
            <param name="lastErrorCode">错误码，只在参数错误时有效，如果某个设备出错，则错误码需要像设备获取</param>
            <param name="wrongContinue">是否遇到错误后继续；此参数表示当队列中某个设备下发失败后是否继续进行后续设备的数据下发，如果此值设置为false，则不会为后续设备设置错误码</param>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picPaths">图片路径（最多五张图片）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <returns>是否添加成功(成功标识位与传入设备一致)</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFace(HaSdkWrapper.HaCamera[],System.Int32@,System.Boolean,System.String,System.String,System.Int32,System.Byte[][],System.UInt32,System.UInt32)">
            <summary>
            <para>添加一组图片到同一人员中</para>
            <para>下发到多个设备</para>
            <para>如果参数错误，则不会将错误码设置到逐个设备而直接返回</para>
            <para>注意，此函数暂不支持多张图片选择性下发，如果发现有不合格的图片，则会全部不予下发</para>
            </summary>
            <param name="cameras">需要下发的设备列表</param>
            <param name="lastErrorCode">错误码，只在参数错误时有效，如果某个设备出错，则错误码需要像设备获取</param>
            <param name="wrongContinue">是否遇到错误后继续；此参数表示当队列中某个设备下发失败后是否继续进行后续设备的数据下发，如果此值设置为false，则不会为后续设备设置错误码</param>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picDatas">图片数据（最多五张图片，需要图片完整数据，通过File.ReadAllBytes读出来的）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <returns>是否添加成功(成功标识位与传入设备一致)</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFace(HaSdkWrapper.HaCamera[],System.Int32@,System.Boolean,System.String,System.String,System.Int32,System.String[],System.UInt32,System.UInt32)">
            <summary>
            <para>更新一组图片到同一人员中</para>
            <para>下发到多个设备</para>
            <para>如果参数错误，则不会将错误码设置到逐个设备而直接返回</para>
            <para>注意，此函数暂不支持多张图片选择性下发，如果发现有不合格的图片，则会全部不予下发</para>
            </summary>
            <param name="cameras">需要下发的设备列表</param>
            <param name="lastErrorCode">错误码，只在参数错误时有效，如果某个设备出错，则错误码需要像设备获取</param>
            <param name="wrongContinue">是否遇到错误后继续；此参数表示当队列中某个设备下发失败后是否继续进行后续设备的数据下发，如果此值设置为false，则不会为后续设备设置错误码</param>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picPaths">图片路径（最多五张图片）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <returns>是否更新成功(成功标识位与传入设备一致)</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFace(HaSdkWrapper.HaCamera[],System.Int32@,System.Boolean,System.String,System.String,System.Int32,System.Byte[][],System.UInt32,System.UInt32)">
            <summary>
            <para>更新一组图片到同一人员中</para>
            <para>下发到多个设备</para>
            <para>如果参数错误，则不会将错误码设置到逐个设备而直接返回</para>
            <para>注意，此函数暂不支持多张图片选择性下发，如果发现有不合格的图片，则会全部不予下发</para>
            </summary>
            <param name="cameras">需要下发的设备列表</param>
            <param name="lastErrorCode">错误码，只在参数错误时有效，如果某个设备出错，则错误码需要像设备获取</param>
            <param name="wrongContinue">是否遇到错误后继续；此参数表示当队列中某个设备下发失败后是否继续进行后续设备的数据下发，如果此值设置为false，则不会为后续设备设置错误码</param>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picDatas">图片数据（最多五张图片，需要图片完整数据，通过File.ReadAllBytes读出来的）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <returns>是否更新成功(成功标识位与传入设备一致)</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFace(System.String,System.String,System.Int32,System.Drawing.Bitmap,System.UInt32,System.UInt32,System.UInt32,System.Byte,System.String)">
            <summary>
            添加一张人脸模板到设备库中
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。</param>
            <param name="pic">图片</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFace(System.String,System.String,System.Int32,System.Drawing.Bitmap[],System.UInt32,System.UInt32)">
            <summary>
            添加一组图片到同一人员中
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。</param>
            <param name="pics">图片</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFaceEx(System.String,System.String,System.Int32,System.String[],System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            <para>添加一组图片到同一人员中</para>
            <para>一组图片中单个失败不影响其他图片下发</para>
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picPaths">图片路径（最多五张图片）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <param name="err_codes">错误码，需要在外部分配与picPaths长度相等的数组</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFaceEx(System.String,System.String,System.Int32,System.Drawing.Bitmap[],System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            <para>添加一组图片到同一人员中</para>
            <para>一组图片中单个失败不影响其他图片下发</para>
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。</param>
            <param name="pics">图片</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数</param>
            <param name="err_codes">错误码，需要在外部分配与pics长度相等的数组</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.AddFaceEx(System.String,System.String,System.Int32,System.Byte[][],System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            <para>添加一组图片到同一人员中</para>
            <para>一组图片中单个失败不影响其他图片下发</para>
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picPaths">图片数据（最多五张图片，需要图片完整数据，通过File.ReadAllBytes读出来的）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <param name="err_codes">错误码，需要在外部分配与picDatas长度相等的数组</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFace(System.String,System.String,System.Int32,System.String,System.UInt32,System.UInt32,System.UInt32,System.Byte)">
            <summary>
            <para>更新一张人脸模板到相机库中 - Update face</para>
            </summary>
            <param name="personID">
            <para>人员编号 - Id of the face</para>
            <para></para>
            </param>
            <param name="personName">
            <para>人员姓名 - Name</para>
            <para></para>
            </param>
            <param name="personRole">
            <para>人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。- Type, 0:normal, 1: white name, 2: black name</para>
            <para></para>
            </param>
            <param name="picPath">
            <para>图片路径 - Image Path</para>
            <para></para>
            </param>
            <param name="wgNo">
            <para>韦根卡号 - Wiegand Card Number</para>
            <para></para>
            </param>
            <param name="effectTime">
            <para>过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数 - Expiration Time, 0xFFFFFFFF: never expire, 0: always expired, other: utc seconds</para>
            <para></para>
            </param>
            <returns>
            <para>是否修改成功 - True: success, False: fail</para>
            <para></para>
            </returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFace(System.String,System.String,System.Int32,System.String[],System.UInt32,System.UInt32)">
            <summary>
            更新一组图片到同一人员中
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picPaths">图片路径（最多五张图片式）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFace(System.String,System.String,System.Int32,System.Byte[],System.UInt32,System.UInt32,System.UInt32,System.Byte)">
            <summary>
            <para>更新一张人脸模板到相机库中</para>
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。</param>
            <param name="picData">图片数据（图片完整数据，通过File.ReadAllBytes读出来的）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数</param>
            <returns>是否修改成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFace(System.String,System.String,System.Int32,System.Byte[][],System.UInt32,System.UInt32)">
            <summary>
            更新一组图片到同一人员中
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picDatas">图片数据（最多五张图片，需要图片完整数据，通过File.ReadAllBytes读出来的）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFace(System.String,System.String,System.Int32,System.Drawing.Bitmap,System.UInt32,System.UInt32,System.UInt32,System.Byte)">
            <summary>
            修改一张人脸模板到设备库中
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。</param>
            <param name="pic">图片</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数</param>
            <returns>是否修改成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFace(System.String,System.String,System.Int32,System.Drawing.Bitmap[],System.UInt32,System.UInt32)">
            <summary>
            修改一组图片到同一人员中
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。</param>
            <param name="pics">图片</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFaceEx(System.String,System.String,System.Int32,System.String[],System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            <para>更新一组图片到同一人员中</para>
            <para>一组图片中单个失败不影响其他图片下发</para>
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picPaths">图片路径（最多五张图片式）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <param name="err_codes">错误码，需要在外部分配与picPaths长度相等的数组</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFaceEx(System.String,System.String,System.Int32,System.Drawing.Bitmap[],System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            <para>更新一组图片到同一人员中</para>
            <para>一组图片中单个失败不影响其他图片下发</para>
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。</param>
            <param name="pics">图片</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数</param>
            <param name="err_codes">错误码，需要在外部分配与pics长度相等的数组</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ModifyFaceEx(System.String,System.String,System.Int32,System.Byte[][],System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            <para>更新一组图片到同一人员中</para>
            <para>一组图片中单个失败不影响其他图片下发</para>
            </summary>
            <param name="personID">人员编号</param>
            <param name="personName">人员姓名</param>
            <param name="personRole">人员角色</param>
            <param name="picDatas">图片数据（最多五张图片，需要图片完整数据，通过File.ReadAllBytes读出来的）</param>
            <param name="wgNo">韦根卡号</param>
            <param name="effectTime">过期时间</param>
            <param name="err_codes">错误码，需要在外部分配与picPaths长度相等的数组</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.DeleteFace(System.String)">
            <summary>
            <para>删除指定人脸模板</para>
            <EN>Delete face by id</EN>
            </summary>
            <param name="personID">
            <para>模板编号</para>
            <EN>Face id to delete</EN>
            </param>
            <returns>
            <para>是否删除成功</para>
            <EN>True: success, False: fail</EN>
            </returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.DeleteAllFace">
            <summary>
            删除所有人脸模板
            </summary>
            <returns>是否操作成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetFaceCount(System.Int32)">
            <summary>
            获取已注册的人脸模板数
            </summary>
            <param name="personRole">人员角色 0：普通人员。 1：白名单人员。 2：黑名单人员。 -1：所有人员。</param>
            <returns>返回已经添加的人脸总数；如果返回0，可能是出错了(也可能确实是没有模板)，通过错误代码排查</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetSerialParameter(System.Int32,HaSdkWrapper.SerialParameter)">
            <summary>
            设置串口参数
            </summary>
            <param name="comIndex">串口编号；只能是NativeConstants.HA_SERIA_RS485或NativeConstants.HA_SERIA_RS232</param>
            <param name="parameter">串口参数</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetSerialParameter(System.Int32)">
            <summary>
            获取串口参数
            </summary>
            <param name="comIndex">串口编号；只能是NativeConstants.HA_SERIA_RS485或NativeConstants.HA_SERIA_RS232</param>
            <returns>串口参数；可能为空表示未成功，需要排查错误</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.WriteSerialData(System.Int32,System.Byte[])">
            <summary>
            发送串口数据
            </summary>
            <param name="comIndex">串口编号；只能是NativeConstants.HA_SERIA_RS485或NativeConstants.HA_SERIA_RS232</param>
            <param name="dataToSend">要发送的数据</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetReferenceScore">
            <summary>
            获取相机确信分数
            </summary>
            <returns>确信分数，0-100；为0时有可能时发生了错误，需要排查</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetReferenceScore(System.Int32)">
            <summary>
            设置相机确信分数
            </summary>
            <param name="score">确信分数，0-100</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetOutputDelay">
            <summary>
            获取输出延时
            </summary>
            <returns>输出延时（1-30秒）；如果为0，则可能是出错了，需要排查</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetOutputDelay(System.Int32)">
            <summary>
            设置输出延时
            </summary>
            <param name="delay">输出延时（1-30秒）</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetImageOutputType">
            <summary>
            获取图像输出方式
            </summary>
            <returns>0:未初始化 1:全景 2:特写 3:全景+特写；取得0时可能是出现错误，需要排查</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetImageOutputType(System.Int32)">
            <summary>
            设置图片输出方式
            </summary>
            <param name="type">0:未初始化 1:全景 2:特写 3:全景+特写</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetMatchLevel">
            <summary>
            获取对比强度
            </summary>
            <returns>0:未初始化 1:低 2:中 3:高</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetMatchLevel(System.Int32)">
            <summary>
            设置对比强度
            </summary>
            <param name="level">0:未初始化 1:低 2:中 3:高</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetMatchEnable">
            <summary>
            获取对比开关
            </summary>
            <returns>是否开启了对比</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetMatchEnable(System.Boolean)">
            <summary>
            设置对比开关
            </summary>
            <param name="enable">是否开启对比</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetDebugEnable">
            <summary>
            获取调试开关
            </summary>
            <returns>是否开启了调试</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetDebugEnable(System.Boolean)">
            <summary>
            设置调试开关
            </summary>
            <param name="enable">是否开启调试</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.DisConnect">
            <summary>
            <para>断开和相机的连接</para>
            <EN>Disconnect from camera</EN>
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.QueryFaces(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            分页查询人脸模板数据
            </summary>
            <param name="pageNo">页码，从1开始</param>
            <param name="pageSize">页大小，1~100之间的数值</param>
            <param name="role">要查询的人员角色 0：普通人员。 1：白名单人员。 2：黑名单人员。 -1：所有人员。</param>
            <param name="fetchFeatures">是否要获取人员的特征值</param>
            <param name="timeOutInMilli">超时时间</param>
            <returns>查询到的模板数据；可能返回null，返回null时可能是出错了，需要排查</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.QueryFaces(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32,HaSdkWrapper.RecordQueryCondition,System.Int16)">
            <summary>
            <para>分页查询人脸模板数据</para>
            <EN>Paged query face</EN>
            </summary>
            <param name="pageNo">
            <para>页码，从1开始</para>
            <EN>Page number, 1-based</EN>
            </param>
            <param name="pageSize">
            <para>页大小，1~100之间的数值</para>
            <EN>Page size (1-100)</EN>
            </param>
            <param name="role">
            <para>要查询的人员角色 0：普通人员。 1：白名单人员。 2：黑名单人员。 -1：所有人员。</para>
            <EN>Type - 0：normal, 1：white name, 2：black name, -1：all</EN>
            </param>
            <param name="fetchFeatures">
            <para>是否要获取人员的特征值</para>
            <EN>Whether to include feature in the query result</EN>
            </param>
            <param name="totalCount">
            <para>符合条件的记录总数</para>
            <EN>Total count of result</EN>
            </param>
            <param name="timeOutInMilli">
            <para>超时时间</para>
            <EN>Timeout in milliseconds</EN>
            </param>
            <returns>
            <para>查询到的模板数据，可能返回null，返回null时可能是出错了，需要排查</para>
            <EN>Query result, null in case of any error occurred</EN>
            </returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetScheduleModeCfg">
            <summary>
            获取时间调度
            </summary>
            
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetScheduleModeCfgEx">
            <summary>
            获取时间调度15组以上
            </summary>
            
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetScheduleModeCfg(HaSdkWrapper.KindSchedule[])">
            <summary>
            设置时间调度
            </summary>
            
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetAutoCleanEnable">
            <summary>
            查看过期自动清理开关
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetAutoCleanEnable(System.Int32)">
            <summary>
            设置过期自动清理开关
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetProhibitSafetyhat">
            <summary>
            查看未带安全帽禁止通行
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetProhibitSafetyhat(System.Int32)">
            <summary>
            设置未带安全帽禁止通行
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetExtranetParam(HaSdkWrapper.ExtranetParam@)">
            <summary>
            获取外网穿透
            </summary>
            <param name="extr"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetExtranetParam(HaSdkWrapper.ExtranetParam)">
            <summary>
            设置外网穿透
            </summary>
            <param name="extr"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetNetInfo(System.String@,System.String@,System.String@,System.String@)">
            <summary>
            获取设备网络信息
            </summary>
            <param name="ip">设备IP</param>
            <param name="mac">设备MAC地址</param>
            <param name="netmask">设备子网掩码</param>
            <param name="gateway">设备默认网关</param>
            <returns>是否获取成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetIp(System.String)">
            <summary>
            设置设备IP，不改动其掩码和网关
            </summary>
            <param name="ip">要设置的值</param>
            <returns>是否设置成功；如果设置成功，设备会自行重启</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetIp(System.String,System.String)">
            <summary>
            设置设备IP和网关，不改动其掩码
            </summary>
            <param name="ip">要设置的ip</param>
            <param name="gateway">要设置的网关</param>
            <returns>是否设置成功；如果设置成功，设备会自行重启</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetIp(System.String,System.String,System.String)">
            <summary>
            设置设备IP地址、子网掩码和网关
            </summary>
            <param name="ip">要设置的ip</param>
            <param name="netmask">要设置的掩码；如果为空，表示维持原来的值</param>
            <param name="gateway">要设置的网关；如果为空，表示维持原来的值</param>
            <returns>是否设置成功；如果设置成功，设备会自行重启</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetRecoRect">
            <summary>
            获取设备识别区域，相对于设备可见画面区域
            </summary>
            <returns>设备识别区域；可能为null</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.WhiteListAlarm">
            <summary>
            白名单开闸
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.BlackListAlarm">
            <summary>
            黑名单开闸
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.StartDrawRecoRect">
            <summary>
            <para>在实时视频的基础上显示识别区域框</para>
            <para>可以再次调用此函数表示刷新区域</para>
            </summary>
            <returns>是否显示成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.StopDrawRecoRect">
            <summary>
            隐藏识别区域框的显示
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetDeviceInfo(System.String@,System.String@,System.String@)">
            <summary>
            获取设备信息
            </summary>
            <param name="device_id">设备编号；如未设置，会返回string.Empty而非null</param>
            <param name="addr_id">点位编号；如未设置，会返回string.Empty而非null</param>
            <param name="addr_name">点位名称；如未设置，会返回string.Empty而非null</param>
            <returns>是否获取成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetDeviceInfo(System.String,System.String,System.String)">
            <summary>
            设置设备信息
            </summary>
            <param name="device_id">设备编号</param>
            <param name="addr_id">点位编号</param>
            <param name="addr_name">点位名称</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetTime(System.String@)">
            <summary>
            获取设备时间
            </summary>
            <param name="time">出参，接收设备时间字符串；设备时间格式为yyyy/MM/dd HH:mm:ss</param>
            <returns>是否获取成功，如果失败，接收到的字符串为string.Empty</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetTime(System.String)">
            <summary>
            设置设备时间
            </summary>
            <param name="time">要设置到设备的时间，格式必须为yyyy/MM/dd HH:mm:ss</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetAuthInfo(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            设置验证信息
            </summary>
            <param name="origin_username">原始用户名</param>
            <param name="origin_password">原始密码</param>
            <param name="new_username">新的用户名（为空表示不修改）</param>
            <param name="new_password">新的密码（为空表示不修改）</param>
            <param name="auth_enable">是否启用登陆验证，如果关闭，下次登陆传递的用户名密码则不做校验</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.WiegandAlarm(System.UInt32)">
            <summary>
            韦根开闸
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetCamMode">
            <summary>
            获取相机工作模式
            </summary>
            <returns>相机当前工作模式 1：自动模式 2：在线模式 3：离线模式；如果获取失败，返回0</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetCamMode(System.Int32)">
            <summary>
            设置相机工作模式
            </summary>
            <param name="camMode">1：自动模式 2：在线模式 3：离线模式</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SwitchStreamTrans(System.Boolean)">
            <summary>
            <para>是否打开视频流 - Turn video streaming on/off</para>
            </summary>
            <param name="open">是否打开视频流 - True: turn streaming on, False: turn streaming off</param>
            <returns>是否切换成功 - True: success, False: fail</returns>
        </member>
        <member name="P:HaSdkWrapper.HaCamera.RecorderEnable">
            <summary>
            <para>获取或设置脱机记录存储启用标识</para>
            <para>设备是否存储未成功上传的抓拍记录到TF卡</para>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.HaCamera.RecorderResumeEnable">
            <summary>
            <para>获取或设置脱机记录断点续传启用标识</para>
            <para>设备是否重新发送未成功上传的抓拍记录到服务器</para>
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.DeleteFaceRecord(System.Nullable{System.UInt32})">
            <summary>
            删除存储在设备TF卡中的历史记录
            </summary>
            <param name="sequnceno">要删除的历史记录编号，null表示删除所有</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.QueryRecords(System.Int32,System.Int32,HaSdkWrapper.RecordQueryCondition,System.Int32)">
            <summary>
            分页查询脱机存储记录 - Paged Record Query
            </summary>
            <param name="pageNo">页码，从1开始 - Page Number, 1 based</param>
            <param name="pageSize">页大小，需小于20 - Page Size, must be &lt; 20</param>
            <param name="condition">查询条件，组合内容 - Query Condition</param>
            <param name="timeOutInMilli">超时时间 - Query timeout in milliseconds</param>
            <returns>查询到的脱机记录数据；可能返回null，返回null时可能是出错了，需要排查 - Query result, null in case of error</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.QueryRecords(System.Int32,System.Int32,HaSdkWrapper.RecordQueryCondition,System.Int32@,System.Int32)">
            <summary>
            分页查询脱机存储记录 - Paged Record Query
            </summary>
            <param name="pageNo">页码，从1开始 - Page Number, 1 based</param>
            <param name="pageSize">页大小，需小于20 - Page Size, must be &lt; 20</param>
            <param name="condition">查询条件，组合内容 - Query Condition</param>
            <param name="totalCount">符合条件的记录总数 - Total count of query result</param>
            <param name="timeOutInMilli">超时时间 - Query timeout in milliseconds</param>
            <returns>查询到的脱机记录数据；可能返回null，返回null时可能是出错了，需要排查 - Query result, null in case of error</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetAllPersonId">
            <summary>
            获取所有人员编号
            </summary>
            <returns>所有人员编号；返回null表示查询失败；返回空数组表示没有注册人员</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.Snapshot(System.Int32)">
            <summary>
            从设备截图
            </summary>
            <param name="timeOutInMilli">超时时间</param>
            <returns>设备实时画面截图；返回null表示截图失败</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.Reboot">
            <summary>
            重启设备
            </summary>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.StartRecoVideo(System.String)">
            <summary>
            录像到文件
            </summary>
            <param name="savePath">录像文件存储路径</param>
            <returns>是否成功启动录像</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetSDKPassword(System.String)">
            <summary>
            设置设备二级密码
            </summary>
            <param name="passsword">要设置的密码</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetMatchMode">
            <summary>
            获取对比模式
            </summary>
            <returns>相机对比模式</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetMatchMode(HaSdkWrapper.MatchMode)">
            <summary>
            设置对比模式
            </summary>
            <param name="mm">对比模式</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetAlarmDuration(System.Int32@)">
            <summary>
            获取继电器闭合持续时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetAlarmDuration(System.Int32)">
            <summary>
            设置继电器闭合持续时间
            </summary>
            <param name="mm"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.StopRecoVideo">
            <summary>
            停止录像
            </summary>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.ReadCustomerAuthCode">
            <summary>
            读取用户校验码
            </summary>
            <returns>设备用户校验码</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.WriteCustomerAuthCode(System.String)">
            <summary>
            写入用户校验码
            </summary>
            <param name="authCode">设备用户校验码</param>
            <returns>是否写入成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.PlayAudio(System.Byte[])">
            <summary>
            播放音频。注：只支持wav格式声音数据(压缩参数：A-Law, 8000Hz,64kbps,mono)
            </summary>
            <param name="audioFileBytes">语音文件内容</param>
            <returns>是否播放成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetAliveDetectEnable">
            <summary>
            获取活体检测开关
            </summary>
            <returns>是否开启了活体检测</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetAliveDetectEnable(System.Boolean)">
            <summary>
            开启或关闭活体检测
            </summary>
            <param name="enable">是否开启活体检测</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetAudioList(System.Int32@)">
            <summary>
            获取内置音频
            </summary>
            <param name="items"></param>
            <param name="itemNum"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_TestAudioItemByName(HaSdkWrapper.AudioItem@)">
            <summary>
            播放内置音频
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetLcdDisplayItems(System.Int32@)">
            <summary>
            获取LCD显示屏显示项
            </summary>
            <param name="itme"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetLcdDisplayItems(System.Int32)">
            <summary>
            设置显示项
            </summary>
            <param name="itme"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetUploadConfig(HaSdkWrapper.ClientParam@)">
            <summary>
            获取上传设置
            </summary>
            <param name="UploadParam"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetUploadConfig(HaSdkWrapper.ClientParam@)">
            <summary>
            设置上传
            </summary>
            <param name="UploadParam"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetHatDetectEnable">
            <summary>
            获取安全帽检测开关
            </summary>
            <returns>是否开启了安全帽检测</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetHatDetectEnable(System.Boolean)">
            <summary>
            开启或关闭安全帽检测
            </summary>
            <param name="enable">是否开启安全帽检测</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetflipEnable(System.Byte@)">
            <summary>
            获取镜像显示开关
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetflipEnable(System.Byte)">
            <summary>
            设置镜像显示开关
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetLedLevel(System.Byte@)">
            <summary>
            获取显示屏亮度
            </summary>
            <param name="led_level"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetLedLevel(System.Byte)">
            <summary>
            设置显示屏亮度
            </summary>
            <param name="led_level"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetGpioWorkState(System.Byte@)">
            <summary>
            获取相机gpio工作状态  gpio状态。1：常开模式 0：常闭模式
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetGpioWorkState(System.Byte)">
            <summary>
            设置相机gpio工作状态  gpio状态。1：常开模式 0：常闭模式
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetFaceCheckRotate(System.Int32)">
            <summary>
            <para>打开检测旋转人脸 打开后自动修正旋转方向错误的图片 注:打开后会影响检测速度 - Enable Face Tilt Correction: slows down performance if enable</para>
            </summary>
            <param name="enable">
            <para>0:关 !0:开 - 0: disable, non-zero: enable</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetVersion(HaSdkWrapper.HaSdkVersion@)">
            <summary>
            获取版本信息
            </summary>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetFaceSystemCfgmatch(System.Byte@)">
            <summary>
            获取设备是否上传比对失败图像 0 不过滤 非0过滤
            </summary>
            <param name="conf"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetFaceSystemCfgmatch(System.Byte)">
            <summary>
            设置 是否上传比对失败图像 0 不过滤 非0过滤
            </summary>
            <param name="filter_not_match"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_Getgpio_enable_white(System.Byte@)">
            <summary>
            获取白名单GPIO输出开关（端口1）。1：开 0：关
            </summary>
            <param name="gpio_enable_white"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_Setgpio_enable_white(System.Byte)">
            <summary>
            设置 白名单GPIO输出开关（端口1）。1：开 0：关
            </summary>
            <param name="gpio_enable_white"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetUploadDomain(System.Byte[])">
            <summary>
            获取上传方式域名
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetUploadDomain(System.Byte[])">
            <summary>
            设置上传方式域名
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetExtranetDomain(System.Byte[])">
            <summary>
            获取外网穿透域名
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetExtranetDomain(System.Byte[])">
            <summary>
            设置外网穿透域名
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.GetWDR(System.Byte@,HaSdkWrapper.HourSchedule@)">
            <summary>
            获取宽动态
            </summary>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetWDR(System.Byte,HaSdkWrapper.HourSchedule)">
            <summary>
            设置宽动态
            </summary>
            <param name="enable">0:关 1：常开 2:按时间段开关</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.SetScreenOsdTitle(System.String)">
            <summary>
            设置屏幕显示
            </summary>
            <param name="screen_title"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.TTSPlayAudio(System.String)">
            <summary>
            播放语音
            </summary>
            <param name="screen_title"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetFaceSystemVersionEx(HaSdkWrapper.SystemVersionInfo@)">
            <summary>
            获取设备信息
            </summary>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetDereplicationgConfig(System.Int32@,System.Int32@)">
            <summary>
            
            获取去重复
            </summary>
            <param name="enable"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetDereplicationEnable(System.Int32,System.Int32)">
            <summary>
            设置去重复
            </summary>
            <param name="enable"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetAudioVolume(System.Int32@)">
            <summary>
            获取设备音量
            </summary>
            <param name="audio_volume"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetTemperaturEnable(System.Int32@)">
            <summary>
            获取体温检测开关
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetTemperaturEnable(System.Int32)">
            <summary>
            设置体温检测
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetMaskInspectEnable(System.Int32@)">
            <summary>
            获取口罩检查开关
            </summary>
            <param name="enable">0关 1开</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetMaskInspectEnable(System.Int32)">
            <summary>
            设置口罩检查开关
            </summary>
            <param name="enable">0关 1开</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_AddFaceFlags(System.String,System.String,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.Byte,System.String,System.Byte)">
            <summary>
            <para>只增加人员信息，不需要人脸 - Add face without image</para>
            </summary>
            <param name="personID">
            <para>人员编号 - Id of the face</para>
            </param>
            <param name="personName">
            <para>人员姓名 - Name</para>
            </param>
            <param name="personRole">
            <para>人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。- Type, 0: normal, 1: white name, 2: black name</para>
            </param>
            <param name="wgNo">
            <para>韦根卡号 - Wiegand Card Number</para>
            </param>
            <param name="effectTime">
            <para>过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数 - Expiration Time,  0xFFFFFFFF: never expiry 0: always expired, other value: utc seconds</para>
            </param>
            <param name="mod">
            <para>1注册 2修改 - 1: register, 2: update</para>
            </param>
            <returns>
            <para>是否添加成功 - True: success, False: fail</para>
            </returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_updateFaceFlags(System.String,System.String,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.Byte,System.String,System.UInt32)">
            <summary>
            <para>修改人脸 - Update Face</para>
            </summary>
            <param name="personID">
            <para>人员编号 - Id of Face</para>
            </param>
            <param name="personName">
            <para>人员姓名 - Name</para>
            </param>
            <param name="personRole">
            <para>人员角色，0：普通人员。 1：白名单人员。 2：黑名单人员。- type，0：normal, 1：white name, 2：black name</para>
            </param>
            <param name="wgNo">
            <para>韦根卡号 - Wiegand Card Number</para>
            <para></para>
            </param>
            <param name="effectTime">
            <para>过期时间 0xFFFFFFFF永不过期 0永久失效 其他值UTC秒数 - Expiration Time, 0xFFFFFFFF: never 0: always other: utc seconds</para>
            <para></para>
            </param>
            <param name="effectstarttime">
            <para>开始时间 - Valid From</para>
            <para></para>
            </param>
            <param name="ScheduleMode">
            <para>调度规则 - Schedule Rule</para>
            <para></para>
            </param>
            <param name="userParam">
            <para>自定义字段 - User-defined Data</para>
            <para></para>
            </param>
            <param name="update_flags">
            <para>修改标记 - Update flags</para>
            </param>
            <returns>
            <para>是否更新成功 - True: success, False: fail</para>
            </returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetTemperaturLimit(System.Single@,System.Int32@)">
            <summary>
            获取是否限制体温
            </summary>
            <param name="cam"></param>
            <param name="temperatur">高于此温度不开闸</param>
            <param name="enable">0:关 1:开 打开后体温高于temperatur不开闸</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetTemperaturLimit(System.Single,System.Int32)">
            <summary>
            设置是否限制体温
            </summary>
            <param name="cam"></param>
            <param name="temperatur">高于此温度不开闸</param>
            <param name="enable">0:关 1:开 打开后体温高于temperatur不开闸</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SendJson(System.String,System.String,System.String@)">
            <summary>
            发送json命令
            </summary>
            <param name="cmd">cmd值</param>
            <param name="json">发送json</param>
            <param name="replyJson">返回json</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetAudioVolume(System.Int32)">
            <summary>
            设置设备音量
            </summary>
            <param name="audio_volume"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_GetPersonDisplayOptions(System.Int32@)">
            <summary>
            获取比对成功显示项
            </summary>
            <param name="Options"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.HaCamera.HA_SetPersonDisplayOptions(System.Int32)">
            <summary>
            设置比对成功显示项
            </summary>
            <param name="Options"></param>
            <returns></returns>
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_NONE">
            ERR_NONE -> 0
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_INVALID_PARAM">
            ERR_INVALID_PARAM -> -1
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_TIMEOUT">
            ERR_TIMEOUT -> -2
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_SEND_BUF_FULL">
            ERR_SEND_BUF_FULL -> -3
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_SYS_NOT_MATCH">
            ERR_SYS_NOT_MATCH -> -4
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_UNCONNECTED">
            ERR_UNCONNECTED -> -5
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_SNAPSHOT_UNAVAILABLE">
            ERR_SNAPSHOT_UNAVAILABLE -> -6
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_JPEG_ENCODE_ERROR">
            ERR_JPEG_ENCODE_ERROR -> -7
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_JPEG_BUF_TOO_SMALL">
            ERR_JPEG_BUF_TOO_SMALL -> -8
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_CANCEL">
            ERR_CANCEL -> -9
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_UNABLE_TO_OPEN_FILE">
            ERR_UNABLE_TO_OPEN_FILE -> -10
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_NOT_IMPLEMENTED">
            ERR_NOT_IMPLEMENTED -> -11
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_COUNT_INVALID">
            ERR_COUNT_INVALID -> -12
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_OUT_PUT_OF_ARRAY">
            ERR_OUT_PUT_OF_ARRAY -> -13
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_GET_FACE_FEATURE">
            ERR_GET_FACE_FEATURE -> -14
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_FACE_ID_REPEAT">
            ERR_FACE_ID_REPEAT -> -15
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_FACE_ID_NOT_EXITS">
            ERR_FACE_ID_NOT_EXITS -> -16
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_GET_FACE_INIT">
            ERR_GET_FACE_INIT -> -17
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_GET_FACE_ID">
            ERR_GET_FACE_ID -> -18
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_SERIAL_INDEX">
            ERR_SERIAL_INDEX -> -19
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_SYSTEM_REBOOT">
            ERR_SYSTEM_REBOOT -> -20
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_APP_REBOOT">
            ERR_APP_REBOOT -> -21
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_ENCODE_JPG">
            ERR_ENCODE_JPG -> -22
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_FACES_NUM">
            ERR_FACES_NUM -> -23
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_IMAGE_DECODE">
            ERR_IMAGE_DECODE -> -24
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_IMAGE_SIZE">
            ERR_IMAGE_SIZE -> -25
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_IMAGE_PATH">
            ERR_IMAGE_PATH -> -26
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_SAVE_IMG_NUM">
            ERR_SAVE_IMG_NUM -> -27
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_PTZ_CTRL">
            ERR_PTZ_CTRL -> -28
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_PTZ_CTRL_MODE">
            ERR_PTZ_CTRL_MODE -> -29
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_DAEMON_REQUEST">
            ERR_DAEMON_REQUEST -> -30
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_UPPER_LIMIT">
            ERR_UPPER_LIMIT -> -31
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_PROTOCAL_VER">
            ERR_PROTOCAL_VER -> -32
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_REQUEST_CMD">
            ERR_REQUEST_CMD -> -33
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_PACKET_DATA">
            ERR_PACKET_DATA -> -34
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_AUTH_FAILED">
            ERR_AUTH_FAILED -> -35
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_WRITE_DATA">
            ERR_WRITE_DATA -> -36
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_READ_DATA">
            ERR_READ_DATA -> -37
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_TWIST_FACE">
            ERR_TWIST_FACE -> -38
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_EXTRACT_FEATURE">
            ERR_EXTRACT_FEATURE -> -39
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_MIN_FACE">
            ERR_MIN_FACE -> -40
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_QVALUE_TOO_SMALL">
            ERR_QVALUE_TOO_SMALL -> -41
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_INVALID_SYNC_MODE">
            ERR_INVALID_SYNC_MODE -> -42
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_WG_QUERY_MODE">
            ERR_WG_QUERY_MODE -> -43
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_SYSTEM_BUSY">
            ERR_SYSTEM_BUSY -> -44
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_VERSION_MATCH">
            ERR_VERSION_MATCH -> -45
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_TOO_MUCH_FACE">
            ERR_TOO_MUCH_FACE -> -46
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_FACE_INCOMPLETE">
            ERR_FACE_INCOMPLETE -> -47
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_ANGLE_PITCH">
            ERR_ANGLE_PITCH -> -48
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_ANGLE_YAW">
            ERR_ANGLE_YAW -> -49
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_ANGLE_ROLL">
            ERR_ANGLE_ROLL -> -50
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_MOUTH_OPEN">
            ERR_MOUTH_OPEN -> -51
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_YINYANG_FACE">
            ERR_YINYANG_FACE -> -52
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_VISIBLE_TARGET">
            ERR_VISIBLE_TARGET -> -54
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_INFRARED_TARGET">
            ERR_INFRARED_TARGET -> -55
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_ABERRATION_TOO_BIG">
            ERR_ABERRATION_TOO_BIG -> -56
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_REPLYCODE_FEATURE_VERSION">
            ERR_REPLYCODE_FEATURE_VERSION -> -60
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_LACK_TWISTIMGE">
            ERR_LACK_TWISTIMGE -> -61
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.ERR_UNKNOWN">
            ERR_UNKNOWN -> -1000
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MCAST_PORT">
            MCAST_PORT -> 6100
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MCAST_IP_D">
            MCAST_IP_D -> "224.0.1.1"
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MSG_PACKET_PROGRESS">
            MSG_PACKET_PROGRESS -> 3001
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MSG_PACKET_ADVANCE">
            MSG_PACKET_ADVANCE -> 3002
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MSG_PACKET_CMCAST">
            MSG_PACKET_CMCAST -> 3003
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MSG_PACKET_CMCAST_ACK">
            MSG_PACKET_CMCAST_ACK -> 3004
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MSG_PACKET_IPSET">
            MSG_PACKET_IPSET -> 3005
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_LANE_NUM">
            MAX_LANE_NUM -> (4)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_FLASH_NUM">
            MAX_FLASH_NUM -> (4)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_RADAR_NUM">
            MAX_RADAR_NUM -> (4)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_INPUT_IO_NUM">
            MAX_INPUT_IO_NUM -> (8)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_COIL_GROUP">
            MAX_COIL_GROUP -> (4)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_CABINET_STATE">
            MAX_CABINET_STATE -> (8)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.HA_SERIA_RS485">
            HA_SERIA_RS485 -> (1)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.HA_SERIA_RS232">
            HA_SERIA_RS232 -> (2)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_IMG_NUM">
            MAX_IMG_NUM -> 4
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_VIDEO_NUM">
            MAX_VIDEO_NUM -> 2
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_PLATE_IMG_NUM">
            MAX_PLATE_IMG_NUM -> 2
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MAX_FACE_IMG_NUM">
            MAX_FACE_IMG_NUM -> 32
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.TL_HEADER_SIZE">
            TL_HEADER_SIZE -> 8
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.PROTOCOL_MAJOR">
            PROTOCOL_MAJOR -> 0
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.PROTOCOL_MINOR">
            PROTOCOL_MINOR -> 2
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.SYS_TYPE_EP">
            SYS_TYPE_EP -> 1
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.SYS_TYPE_GW">
            SYS_TYPE_GW -> 2
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.SYS_TYPE_GKJ">
            SYS_TYPE_GKJ -> 3
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.SYS_TYPE_ILLEGALPARK">
            SYS_TYPE_ILLEGALPARK -> 4
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.SYS_TYPE_MIDDLEWARE">
            SYS_TYPE_MIDDLEWARE -> 5
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.SYS_TYPE_FACE_CAR_GW">
            SYS_TYPE_FACE_CAR_GW -> 6
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.SYS_TYPE_PARK">
            SYS_TYPE_PARK -> 7
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.SYSTEM_TYPE_FACE">
            SYSTEM_TYPE_FACE -> 12
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REBOOT">
            MESSAGE_ID_REBOOT -> 0
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_RESTART">
            MESSAGE_ID_RESTART -> 1
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_HEART_BEAT">
            MESSAGE_ID_HEART_BEAT -> 2
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SYNCTIME">
            MESSAGE_ID_SYNCTIME -> 3
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REPLY">
            MESSAGE_ID_REPLY -> 4
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_CAR">
            MESSAGE_ID_CAR -> 5
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_GET_FIRMWARE_VER">
            MESSAGE_ID_GET_FIRMWARE_VER -> 6
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_WORK_STATE">
            MESSAGE_ID_WORK_STATE -> 7
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SERIAL_READ">
            MESSAGE_ID_SERIAL_READ -> 8
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_SYS_TIME">
            MESSAGE_ID_REQ_SYS_TIME -> 11
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_SYS_TIME">
            MESSAGE_ID_SET_SYS_TIME -> 12
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_NTP_INFO">
            MESSAGE_ID_REQ_NTP_INFO -> 13
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_NTP_INFO">
            MESSAGE_ID_SET_NTP_INFO -> 14
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_NET_INFO">
            MESSAGE_ID_REQ_NET_INFO -> 15
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_NET_INFO">
            MESSAGE_ID_SET_NET_INFO -> 16
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SERIAL232_READ">
            MESSAGE_ID_SERIAL232_READ -> 80
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SERIAL_WRITE">
            MESSAGE_ID_SERIAL_WRITE -> 9
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_AUTH">
            MESSAGE_ID_REQ_AUTH -> 101
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_AUTH">
            MESSAGE_ID_SET_AUTH -> 102
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_LIVE_IMAGE">
            MESSAGE_ID_LIVE_IMAGE -> 103
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_ALG_IMAGE">
            MESSAGE_ID_ALG_IMAGE -> 104
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_LAMP_STATE">
            MESSAGE_ID_LAMP_STATE -> 105
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_PLATE_IMAGE">
            MESSAGE_ID_PLATE_IMAGE -> 106
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_RADAR_STATE">
            MESSAGE_ID_RADAR_STATE -> 107
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_COIL_STATE">
            MESSAGE_ID_COIL_STATE -> 108
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_DMODE_STATE">
            MESSAGE_ID_DMODE_STATE -> 109
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_GPIO_SET">
            MESSAGE_ID_GPIO_SET -> 110
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_GW_TEST_AUDIO">
            MESSAGE_ID_GW_TEST_AUDIO -> 111
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_GW_GET_AUDIOLIST">
            MESSAGE_ID_GW_GET_AUDIOLIST -> 113
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_WHITELIST">
            MESSAGE_ID_SET_WHITELIST -> 114
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_GET_WHITELIST">
            MESSAGE_ID_GET_WHITELIST -> 115
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_ALARM">
            MESSAGE_ID_SET_ALARM -> 116
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_BACKUP_USER_DEFAULT">
            MESSAGE_ID_BACKUP_USER_DEFAULT -> 117
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_RESTORE_USER_DEFAULT">
            MESSAGE_ID_RESTORE_USER_DEFAULT -> 118
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_RESTORE_MANNUF_DEFAULT">
            MESSAGE_ID_RESTORE_MANNUF_DEFAULT -> 119
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_CUSTOMER_GET_SN">
            MESSAGE_ID_CUSTOMER_GET_SN -> 120
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_CUSTOMER_READ_AUTHCODE">
            MESSAGE_ID_CUSTOMER_READ_AUTHCODE -> 121
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_CUSTOMER_WRITE_AUTHCODE">
            MESSAGE_ID_CUSTOMER_WRITE_AUTHCODE -> 122
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_QUERY_DISK">
            MESSAGE_ID_QUERY_DISK -> 123
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_FORMAT_DISK">
            MESSAGE_ID_FORMAT_DISK -> 124
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_PLAY_AUDIO_STREAM">
            MESSAGE_ID_PLAY_AUDIO_STREAM -> 125
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SIMPLE_CARINFO">
            MESSAGE_ID_SIMPLE_CARINFO -> 126
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_GET_SIMPLE_WLIST">
            MESSAGE_ID_GET_SIMPLE_WLIST -> 127
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_SIMPLE_WLIST">
            MESSAGE_ID_SET_SIMPLE_WLIST -> 128
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_GET_REGINFO">
            MESSAGE_ID_GET_REGINFO -> 129
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_UPDATE_ONE_WHITELIST">
            MESSAGE_ID_UPDATE_ONE_WHITELIST -> 130
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_DELETE_ONE_WHITELIST">
            MESSAGE_ID_DELETE_ONE_WHITELIST -> 131
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_QUERY_ONE_WHITELIST">
            MESSAGE_ID_QUERY_ONE_WHITELIST -> 132
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_QUERY_DB_COUNT">
            MESSAGE_ID_QUERY_DB_COUNT -> 133
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_QUERY_DB_RECORD">
            MESSAGE_ID_QUERY_DB_RECORD -> 134
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_CAR_PARK_VZ">
            MESSAGE_ID_CAR_PARK_VZ -> 135
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_QUERY_DB_RECORD_BY_ID">
            MESSAGE_ID_QUERY_DB_RECORD_BY_ID -> 136
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_GET_NET_AUTH">
            MESSAGE_ID_GET_NET_AUTH -> 143
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_RESET_USER_INFO">
            MESSAGE_ID_RESET_USER_INFO -> 144
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_CONFIG">
            MESSAGE_ID_REQ_CONFIG -> 201
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_CONFIG">
            MESSAGE_ID_SET_CONFIG -> 202
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_RESET_CONFIG">
            MESSAGE_ID_RESET_CONFIG -> 203
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_CAM_PARAM">
            MESSAGE_ID_REQ_CAM_PARAM -> 204
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_CAM_PARAM">
            MESSAGE_ID_SET_CAM_PARAM -> 205
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_RESET_CAM_PARAM">
            MESSAGE_ID_RESET_CAM_PARAM -> 206
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_TEMP_CONFIG">
            MESSAGE_ID_REQ_TEMP_CONFIG -> 207
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_TEMP_CONFIG">
            MESSAGE_ID_SET_TEMP_CONFIG -> 208
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_RESET_TEMP_CONFIG">
            MESSAGE_ID_RESET_TEMP_CONFIG -> 209
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_PL_STATUS">
            MESSAGE_ID_PL_STATUS -> 210
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SOFT_TRIGG">
            MESSAGE_ID_SOFT_TRIGG -> 211
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SEND_UP_OFFLINE_DATA">
            MESSAGE_ID_SEND_UP_OFFLINE_DATA -> 216
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_QUERY_OFFLINE_DATA">
            MESSAGE_ID_QUERY_OFFLINE_DATA -> 217
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_QUERY_COUNT_AND_MONEY_DATA">
            MESSAGE_ID_QUERY_COUNT_AND_MONEY_DATA -> 218
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_DELETE_OFFLINE_DATA">
            MESSAGE_ID_DELETE_OFFLINE_DATA -> 219
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_QUERY_OFFLINE_ENTRY_TIME_BY_PLATE">
            MESSAGE_ID_QUERY_OFFLINE_ENTRY_TIME_BY_PLATE -> 220
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_LOG">
            MESSAGE_ID_LOG -> 300
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_QUREY_FACE">
            MESSAGE_ID_QUREY_FACE -> 401
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REG_FACE">
            MESSAGE_ID_REG_FACE -> 402
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_MODIFY_FACE">
            MESSAGE_ID_MODIFY_FACE -> 403
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_DELETE_FACE">
            MESSAGE_ID_DELETE_FACE -> 404
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_SYS_STORAGE">
            MESSAGE_ID_REQ_SYS_STORAGE -> 500
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_SYS_STORAGE">
            MESSAGE_ID_SET_SYS_STORAGE -> 501
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_SYS_NETWORK">
            MESSAGE_ID_REQ_SYS_NETWORK -> 502
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_SET_SYS_NETWORK">
            MESSAGE_ID_SET_SYS_NETWORK -> 503
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_TIME">
            MESSAGE_ID_REQ_TIME -> 504
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_HASX_REQ_CAM_PARAM">
            MESSAGE_ID_HASX_REQ_CAM_PARAM -> 500
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_HASX_SET_CAM_PARAM">
            MESSAGE_ID_HASX_SET_CAM_PARAM -> 501
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_HASX_RESET_CAM_PARAM">
            MESSAGE_ID_HASX_RESET_CAM_PARAM -> 502
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_HASX_REQ_CAM_PARAM_ONE">
            MESSAGE_ID_HASX_REQ_CAM_PARAM_ONE -> 503
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_HASX_SET_CAM_PARAM_ONE">
            MESSAGE_ID_HASX_SET_CAM_PARAM_ONE -> 504
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_HASX_LIVE_IMAGE">
            MESSAGE_ID_HASX_LIVE_IMAGE -> 505
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_UPDATE">
            MESSAGE_ID_UPDATE -> 900
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_REQ_SYS_INFO">
            MESSAGE_ID_REQ_SYS_INFO -> 1000
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.MESSAGE_ID_MAX">
            MESSAGE_ID_MAX -> 1023
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.REPLYCODE_OK">
            REPLYCODE_OK -> (0)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.REPLYCODE_PROTOCOL_UNMATCH">
            REPLYCODE_PROTOCOL_UNMATCH -> (1)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.REPLYCODE_MESSAGEID_ERROR">
            REPLYCODE_MESSAGEID_ERROR -> (2)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.REPLYCODE_ERROR_VALUE">
            REPLYCODE_ERROR_VALUE -> (3)
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.DATA_TYPE_FACE_CAR_FACE">
            DATA_TYPE_FACE_CAR_FACE -> 0
        </member>
        <member name="F:HaSdkWrapper.NativeConstants.DATA_TYPE_FACE_CAR_CAR">
            DATA_TYPE_FACE_CAR_CAR -> 1
        </member>
        <member name="F:HaSdkWrapper.CamCtrlLED.seq">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlLED.lightType">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlLED.hz">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlLED.trigType">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlLED.phase">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlLED.pulseWidth">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlLED.rev">
            int[32]
        </member>
        <member name="F:HaSdkWrapper.CamCtrlAutoCtrl.standard">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlAutoCtrl.maxShut">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlAutoCtrl.minShut">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlAutoCtrl.maxGain">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlAutoCtrl.gainLevel">
            int[4]
        </member>
        <member name="F:HaSdkWrapper.CamCtrlAutoCtrl.agcSelect">
            int[6]
        </member>
        <member name="F:HaSdkWrapper.CamCtrlAutoCtrl.rev">
            int[32]
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.manualShut">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannuGainLevel">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannualGainValue">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannualR">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannualGr">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannualGb">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannualB">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannualRoft">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannualGroft">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannualGboft">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.mannualBoft">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlMannualCtrl.rev">
            int[32]
        </member>
        <member name="F:HaSdkWrapper.CamCtrlImageEnhance.imgSaturability">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlImageEnhance.imgContrast">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlImageEnhance.imgSharpen">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlImageEnhance.imgNoise">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlImageEnhance.imgGamma">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlImageEnhance.imgGammaEnable">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlImageEnhance.rev">
            int[31]
        </member>
        <member name="F:HaSdkWrapper.CamCtrlTrigIO.trigType">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlTrigIO.trigNum">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlTrigIO.trigInter">
            int[2]
        </member>
        <member name="F:HaSdkWrapper.CamCtrlTrigIO.flashEable">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlTrigIO.flashIndex">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlTrigIO.rev">
            int[8]
        </member>
        <member name="F:HaSdkWrapper.CamCtrlExtSync.enable">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlExtSync.phase">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrlExtSync.filter">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.enableAutoExp">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.enableAutoAwb">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.autoCtrl">
            CamCtrlAutoCtrl
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.manualCtrl">
            CamCtrlMannualCtrl
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.imgEnhance">
            CamCtrlImageEnhance
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.led">
            CamCtrlLED[5]
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.trigIO">
            CamCtrlTrigIO[8]
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.extSync">
            CamCtrlExtSync
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.jpegQ">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.h264W">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.h264H">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.h264Bitrate">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.ip">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.netmask">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.gateway">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.systime">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.trig_shut">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.trig_gain">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.sensorType">
            int
        </member>
        <member name="F:HaSdkWrapper.CamCtrl.rev">
            int[126]
        </member>
        <member name="F:HaSdkWrapper.DayTime.startHour">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.DayTime.startMinute">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.DayTime.endHour">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.DayTime.endMinute">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.STREAM_FORMAT.STREAM_FORMAT_JPEG">
            STREAM_FORMAT_JPEG -> 1
        </member>
        <member name="F:HaSdkWrapper.STREAM_FORMAT.STREAM_FORMAT_H264">
            STREAM_FORMAT_H264 -> 2
        </member>
        <member name="F:HaSdkWrapper.CHAR_ENCODE.CHAR_ENCODE_GBK">
            CHAR_ENCODE_GBK -> 0
        </member>
        <member name="F:HaSdkWrapper.UploadMode.UPLOAD_MODE_NULL">
            UPLOAD_MODE_NULL -> 0
        </member>
        <member name="F:HaSdkWrapper.UploadMode.UPLOAD_MODE_TCP">
            UPLOAD_MODE_TCP -> 1
        </member>
        <member name="F:HaSdkWrapper.UploadMode.UPLOAD_MODE_FTP">
            UPLOAD_MODE_FTP -> 2
        </member>
        <member name="F:HaSdkWrapper.UploadMode.UPLOAD_MODE_HTTP">
            UPLOAD_MODE_HTTP -> 3
        </member>
        <member name="F:HaSdkWrapper.UPLOAD_MODE.UPLOAD_MODE_TCP">
            UPLOAD_MODE_TCP -> 0
        </member>
        <member name="F:HaSdkWrapper.HA_LiveStream.w">
            int
        </member>
        <member name="F:HaSdkWrapper.HA_LiveStream.h">
            int
        </member>
        <member name="F:HaSdkWrapper.HA_LiveStream.format">
            STREAM_FORMAT->Anonymous_82fe6ace_67d9_4f6e_ae7f_974b643259dc
        </member>
        <member name="F:HaSdkWrapper.HA_LiveStream.streamLen">
            int
        </member>
        <member name="F:HaSdkWrapper.HA_LiveStream.streamBufSize">
            int
        </member>
        <member name="F:HaSdkWrapper.HA_LiveStream.streamBuf">
            char*
        </member>
        <member name="F:HaSdkWrapper.FeeInfoRes.plate">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FeeInfoRes.time_in">
            time_t->__time32_t->int
        </member>
        <member name="F:HaSdkWrapper.FeeInfoRes.time_out">
            time_t->__time32_t->int
        </member>
        <member name="F:HaSdkWrapper.FeeInfoRes.park_fee">
            float
        </member>
        <member name="F:HaSdkWrapper.FeeInfoRes.fee_mode">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfoRes.platecolor">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoRes.InOut_type">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.plate">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.in_year">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.in_month">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.in_day">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.in_hour">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.in_min">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.in_sec">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.out_year">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.out_month">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.out_day">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.out_hour">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.out_min">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.out_sec">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.park_fee">
            float
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.fee_mode">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.platecolor">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfo.InOut_type">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.plate">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.year_in">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.mon_in">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.day_in">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.hour_in">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.min_in">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.sec_in">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.year_out">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.mon_out">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.day_out">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.hour_out">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.min_out">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.sec_out">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.park_fee">
            float
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.fee_mode">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.platecolor">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FeeInfoEx.InOut_type">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.plate">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.plateColor">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.year">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.month">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.day">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.hour">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.AnonymousMember1">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.sec">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.bEnable">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.enable_year">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.enable_month">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.enable_day">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.enable_hour">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.enable_min">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.enable_sec">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.bAlarm">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.HA_AllowList.resv">
            int[13]
        </member>
        <member name="F:HaSdkWrapper.VERSION.protocl_version">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.VERSION.arm_version">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.VERSION.arm_buildtime">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.VERSION.arm_code_version">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.VERSION.dsp_version">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.VERSION.dsp_buildtime">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.VERSION.dsp_code_version">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.VERSION.video_width">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.VERSION.video_height">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.AudioItem.id">
            int
        </member>
        <member name="F:HaSdkWrapper.AudioItem.desc">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.sequence">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.camId">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.posId">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.posName">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.tvSec">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.tvUsec">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.isRealtimeData">
            short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.matched">
            short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.matchPersonId">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.matchPersonName">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.matchRole">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.existImg">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.imgFormat">
            char[4]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.imgLen">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceXInImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceYInImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceWInImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceHInImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.existFaceImg">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceImgFormat">
            char[4]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceImgLen">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceXInFaceImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceYInFaceImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceWInFaceImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceHInFaceImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.existVideo">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.videoStartSec">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.videoStartUsec">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.videoEndSec">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.videoEndUsec">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.videoFormat">
            char[4]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.videoLen">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.sex">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.age">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.expression">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.skinColour">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.qValue">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.living">
            活体
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.hatColour">
            枚举 
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.resv">
            char[100]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.img">
            unsigned char*
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.faceImg">
            unsigned char*
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.video">
            unsigned char*
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.resv1">
            char[80]
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.existIDCard">
            <summary>
            是否存在身份信息
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.IDCardnumber">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.IDCardname">
            <summary>
            姓名
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.IDCardsex">
            <summary>
            性别
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.IDCardnational">
            <summary>
            民族
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.IDCardbirth">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.IDCardresidence_address">
            <summary>
            地址
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.IDCardorgan_issue">
            <summary>
            签发机关
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.IDCardvalid_date_start">
            <summary>
            有效期起始时间
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.IDCardvalid_date_end">
             <summary>
            有效期截止时间
             </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceRecoInfo.userParam">
            <summary>
            自定义字段
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceFlags.faceID">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.FaceFlags.faceName">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FaceFlags.role">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceFlags.wgCardNO">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.FaceFlags.effectTime">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.FaceFlags.resv">
            char[8188]
        </member>
        <member name="F:HaSdkWrapper.QueryFaceFlags.personID">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.QueryFaceFlags.personName">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.QueryFaceFlags.featureSize">
            int
        </member>
        <member name="F:HaSdkWrapper.QueryFaceFlags.feature">
            unsigned char[1024]
        </member>
        <member name="F:HaSdkWrapper.QueryFaceFlags.imgNum">
            int
        </member>
        <member name="F:HaSdkWrapper.QueryFaceFlags.imgSize">
            int
        </member>
        <member name="F:HaSdkWrapper.QueryFaceFlags.img">
            unsigned char[10240]
        </member>
        <member name="F:HaSdkWrapper.QueryFaceFlags.resv">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.ipscan_t.mac">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.ipscan_t.ip">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.ipscan_t.netmask">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.ipscan_t.manufacturer">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.ipscan_t.platform">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.ipscan_t.system">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.ipscan_t.version">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.ipset_t.mac">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.ipset_t.ip">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.ipset_t.netmask">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.ipset_t.gateway">
            char[20]
        </member>
        <member name="T:HaSdkWrapper.discover_ipscan_cb_t">
             Return Type: void
            ipscan: ipscan_t*
            usr_param: int
        </member>
        <member name="F:HaSdkWrapper.ImageForm.IMAGE_FORM_NULL">
            IMAGE_FORM_NULL -> 0
        </member>
        <member name="F:HaSdkWrapper.ImageForm.IMAGE_FORM_OVERALL">
            IMAGE_FORM_OVERALL -> 0x1
        </member>
        <!-- Badly formed XML comment ignored for member "F:HaSdkWrapper.ImageForm.IMAGE_FORM_FEATURE" -->
        <member name="F:HaSdkWrapper.ImageForm.IMAGE_FORM_BOTH">
            IMAGE_FORM_BOTH -> IMAGE_FORM_OVERALL|IMAGE_FORM_FEATURE
        </member>
        <member name="F:HaSdkWrapper.config_size.width">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_size.height">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_point.x">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_point.y">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_rect.x">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_rect.y">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_rect.w">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_rect.h">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_worktime.start_hour">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_worktime.start_min">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_worktime.end_hour">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_worktime.end_min">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_addr.device_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.config_addr.device_name">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.config_addr.addr_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.config_addr.addr_name">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.config_addr.direction_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.config_addr.direction_name">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.config_addr.lane_number">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_addr.lane_start_id">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_addr.match_light">
            unsigned char[4]
        </member>
        <member name="F:HaSdkWrapper.config_addr.master_mode">
            char
        </member>
        <member name="F:HaSdkWrapper.config_addr.slave_mode">
            char
        </member>
        <member name="F:HaSdkWrapper.config_addr.mode_change_threshold">
            char
        </member>
        <member name="F:HaSdkWrapper.config_addr.serial_index">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_addr.serial_baudrate">
            int
        </member>
        <member name="F:HaSdkWrapper.config_addr.serial_databit">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_addr.serial_parity">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_addr.serial_stopbit">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_addr.resv">
            char[113]
        </member>
        <member name="F:HaSdkWrapper.coil_io_attr.group">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.coil_io_attr.index">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.coil_io_attr.count">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.coil_io_attr.match_light">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_coil.enable">
            int
        </member>
        <member name="F:HaSdkWrapper.config_coil.distance">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_coil.io_attr">
            coil_io_attr[8]
        </member>
        <member name="F:HaSdkWrapper.config_coil.resv">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.RADAR_TYPE.RADAR_TYPE_NONE">
            RADAR_TYPE_NONE -> 0
        </member>
        <member name="F:HaSdkWrapper.RADAR_TYPE.RADAR_TYPE_CSRIN">
            RADAR_TYPE_CSRIN -> 1
        </member>
        <member name="F:HaSdkWrapper.RADAR_TYPE.RADAR_TYPE_CSRIN_M">
            RADAR_TYPE_CSRIN_M -> 2
        </member>
        <member name="F:HaSdkWrapper.config_radar.enable">
            int
        </member>
        <member name="F:HaSdkWrapper.config_radar.type">
            RADAR_TYPE
        </member>
        <member name="F:HaSdkWrapper.config_radar.count">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_radar.match_lane">
            unsigned char[4]
        </member>
        <member name="F:HaSdkWrapper.config_radar.match_light">
            unsigned char[4]
        </member>
        <member name="F:HaSdkWrapper.config_radar.enable_log">
            int
        </member>
        <member name="F:HaSdkWrapper.config_radar.resv">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.enable">
            int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.type">
            vdetect_type
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.flash">
            int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.motion">
            int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.diff">
            int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.detect_area">
            config_rect
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.virtual_coil">
            config_rect
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.night_threshold">
            int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.rsv2">
            int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.skip">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.cut">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.min_size">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.max_size">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.resize">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.step">
            float
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.debug">
            int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.draw_coil">
            int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.draw_area">
            int
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.m">
            CALC_LANENO_METHOD
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.match_light">
            unsigned char[4]
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.virtual_coil_polygon">
            config_point[4]
        </member>
        <member name="F:HaSdkWrapper.config_vdetect.resv">
            char[40]
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.enable">
            int
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.debug">
            int
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.detect_area">
            config_rect
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.minsize">
            config_size
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.maxsize">
            config_size
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.step">
            float
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.ratio">
            float
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.interval">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.use_motion">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.face_step">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_face_detect.resv">
            char[48]
        </member>
        <member name="F:HaSdkWrapper.reco_filter_color.RECO_FILTER_BLUE">
            RECO_FILTER_BLUE -> 0
        </member>
        <member name="F:HaSdkWrapper.reco_filter_color.RECO_FILTER_BLACK">
            RECO_FILTER_BLACK -> 1
        </member>
        <member name="F:HaSdkWrapper.reco_filter_color.RECO_FILTER_YELLOW">
            RECO_FILTER_YELLOW -> 2
        </member>
        <member name="F:HaSdkWrapper.reco_filter_color.RECO_FILTER_WHITE">
            RECO_FILTER_WHITE -> 3
        </member>
        <member name="F:HaSdkWrapper.reco_filter_color.RECO_FILTER_GREEN">
            RECO_FILTER_GREEN -> 4
        </member>
        <member name="F:HaSdkWrapper.reco_filter_num.RECO_FILTER_NULL">
            RECO_FILTER_NULL -> 0
        </member>
        <member name="F:HaSdkWrapper.reco_filter_num.RECO_FILTER_XUE">
            RECO_FILTER_XUE -> 1
        </member>
        <member name="F:HaSdkWrapper.reco_filter_num.RECO_FILTER_JING">
            RECO_FILTER_JING -> 2
        </member>
        <member name="F:HaSdkWrapper.config_reco.enable">
            int
        </member>
        <member name="F:HaSdkWrapper.config_reco.ratio">
            float
        </member>
        <member name="F:HaSdkWrapper.config_reco.province">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.config_reco.min_width">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_reco.max_width">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_reco.reco_area">
            config_rect[4]
        </member>
        <member name="F:HaSdkWrapper.config_reco.draw_reco_area">
            int
        </member>
        <member name="F:HaSdkWrapper.config_reco.filter_color">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_reco.filter_num">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_reco.same_plate_report_time">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_reco.draw_reco_area_video">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_reco.reco_mode">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_reco.resv">
            char[48]
        </member>
        <member name="F:HaSdkWrapper.PLATE_FILTER_TYPE.PLATE_FILTER_TYPE_NONE">
            PLATE_FILTER_TYPE_NONE -> 0
        </member>
        <member name="F:HaSdkWrapper.config_special.merge_two">
            int
        </member>
        <member name="F:HaSdkWrapper.config_special.keep_one">
            int
        </member>
        <member name="F:HaSdkWrapper.config_special.plate_filter">
            PLATE_FILTER_TYPE
        </member>
        <member name="F:HaSdkWrapper.config_special.resv">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.config_limit_speed.capture_count">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_limit_speed.overspeed_count">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_limit_speed.interval">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.config_limit_speed.lspeed">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.config_limit_speed.rlspeed">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.config_limit_speed.resv">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.config_net.upload_mode">
            UPLOAD_MODE
        </member>
        <member name="F:HaSdkWrapper.config_net.ftp_server">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.config_net.tcp_server">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.config_net.ntp_server">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.config_net.ntp_interval">
            int
        </member>
        <member name="F:HaSdkWrapper.config_net.ftp_port">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_net.tcp_port">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_net.ftp_user">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.config_net.ftp_passwd">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.config_net.led_server">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.config_net.led_port">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_net.http_port">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_net.http_server">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.config_net.tcp_enable">
            char
        </member>
        <member name="F:HaSdkWrapper.config_net.ftp_enable">
            char
        </member>
        <member name="F:HaSdkWrapper.config_net.led_enable">
            char
        </member>
        <member name="F:HaSdkWrapper.config_net.http_enable">
            char
        </member>
        <member name="F:HaSdkWrapper.config_net.resv">
            char[88]
        </member>
        <member name="F:HaSdkWrapper.CONF_OSD.imgStartX">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.CONF_OSD.imgStartY">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.CONF_OSD.imgFontSize">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.CONF_OSD.imgFontColor">
            unsigned char[3]
        </member>
        <member name="F:HaSdkWrapper.CONF_OSD.imgOSDRules">
            char[512]
        </member>
        <member name="F:HaSdkWrapper.CONF_OSD.resv">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.lamp_area.lamp_num">
            int
        </member>
        <member name="F:HaSdkWrapper.lamp_area.only_red_x">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.lamp_area.only_red_y">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.lamp_area.only_red_w">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.lamp_area.only_red_h">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.lamp_area.all_lamp_x">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.lamp_area.all_lamp_y">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.lamp_area.all_lamp_w">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.lamp_area.all_lamp_h">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_people_red.enable">
            int
        </member>
        <member name="F:HaSdkWrapper.config_people_red.lamp">
            lamp_area
        </member>
        <member name="F:HaSdkWrapper.config_people_red.resv">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.offline">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.alarm_out_mode">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.transfer_offline_data">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.diable_serial_output">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.same_count">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.min_volume">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.max_volume">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.cur_volume">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.light">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.drive_direct">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.ctrl_light_mode">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.day_brightness">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.alarmOutDuration">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.disable_io_port">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.disable_io_output">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.gpio_in">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.gpio_out">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.flash_sync_out1">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.reboot_flag">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_gw_park.resv">
            unsigned char[16]
        </member>
        <member name="F:HaSdkWrapper.config_carbinet_inturn_control.isEnable">
            int
        </member>
        <member name="F:HaSdkWrapper.config_carbinet_inturn_control.ip">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.MessageCarPortState.carPortState">
            int
        </member>
        <member name="F:HaSdkWrapper.MessageCarPortState.lightColor">
            int
        </member>
        <member name="F:HaSdkWrapper.MessageCarPortState.laneNum">
            int
        </member>
        <member name="F:HaSdkWrapper.MessageCarPortState.hasCar">
            int[4]
        </member>
        <member name="F:HaSdkWrapper.MessageCarPortState.hasPlate">
            int[4]
        </member>
        <member name="F:HaSdkWrapper.MessageCarPortState.plate">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.config_carbinet.isSpecial">
            int
        </member>
        <member name="F:HaSdkWrapper.config_carbinet.portNum">
            int
        </member>
        <member name="F:HaSdkWrapper.config_carbinet_state.isEnable">
            int
        </member>
        <member name="F:HaSdkWrapper.config_carbinet_state.isFlicker">
            int
        </member>
        <member name="F:HaSdkWrapper.config_carbinet_state.lightColor">
            int
        </member>
        <member name="F:HaSdkWrapper.config_carbinet_vdetect.inventedRoi">
            config_point[16]
        </member>
        <member name="F:HaSdkWrapper.config_gw_car_port.lightControlMode">
            int
        </member>
        <member name="F:HaSdkWrapper.config_gw_car_port.inturnControl">
            config_carbinet_inturn_control
        </member>
        <member name="F:HaSdkWrapper.config_gw_car_port.carbinetState">
            config_carbinet_state[8]
        </member>
        <member name="F:HaSdkWrapper.config_gw_car_port.carbinet">
            config_carbinet[4]
        </member>
        <member name="F:HaSdkWrapper.config_gw_car_port.alg">
            config_carbinet_vdetect
        </member>
        <member name="F:HaSdkWrapper.config_http.http_ip">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.config_http.http_port">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_http.ssl_port">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.config_http.timeout">
            int
        </member>
        <member name="F:HaSdkWrapper.config_http.enable_ssl">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_http.enable_reg">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_http.enable_post_vehicle">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_http.enable_img">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_http.enable_plate_img">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_http.enable_post_io_info">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_http.enable_post_serial_data">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_http.vehicle_level">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.config_http.reg_url">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.config_http.post_vehicle_url">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.config_http.post_ioinfo_url">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.config_http.post_serial_url">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.config_http.resv">
            unsigned char[128]
        </member>
        <member name="F:HaSdkWrapper.device_group_cam_attr.ip">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.device_group_cam_attr.cam_name">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.device_group_cam_attr.assistFlag">
            char
        </member>
        <member name="F:HaSdkWrapper.device_group_cam_attr.inFlag">
            char
        </member>
        <member name="F:HaSdkWrapper.device_group_cam_attr.resv">
            char[2]
        </member>
        <member name="F:HaSdkWrapper.device_group_cam_attr.r">
            int[4]
        </member>
        <member name="F:HaSdkWrapper.device_group_gate_attr.gate_name">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.device_group_gate_attr.cam_num">
            int
        </member>
        <member name="F:HaSdkWrapper.device_group_gate_attr.attr">
            device_group_cam_attr[4]
        </member>
        <member name="F:HaSdkWrapper.config_device_group.enable_group">
            int
        </member>
        <member name="F:HaSdkWrapper.config_device_group.enable_group_assist">
            int
        </member>
        <member name="F:HaSdkWrapper.config_device_group.ip">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.config_device_group.gate_num">
            int
        </member>
        <member name="F:HaSdkWrapper.config_device_group.attr">
            device_group_gate_attr[8]
        </member>
        <member name="F:HaSdkWrapper.config_gateway.magic_number">
            int
        </member>
        <member name="F:HaSdkWrapper.config_gateway.worktime">
            config_worktime
        </member>
        <member name="F:HaSdkWrapper.config_gateway.addr">
            config_addr
        </member>
        <member name="F:HaSdkWrapper.config_gateway.reco">
            config_reco
        </member>
        <member name="F:HaSdkWrapper.config_gateway.limit_speed">
            config_limit_speed
        </member>
        <member name="F:HaSdkWrapper.config_gateway.radar">
            config_radar
        </member>
        <member name="F:HaSdkWrapper.config_gateway.coil">
            config_coil
        </member>
        <member name="F:HaSdkWrapper.config_gateway.special">
            config_special
        </member>
        <member name="F:HaSdkWrapper.config_gateway.net">
            config_net
        </member>
        <member name="F:HaSdkWrapper.config_gateway.face">
            config_face_detect
        </member>
        <member name="F:HaSdkWrapper.config_gateway.vdetect">
            config_vdetect
        </member>
        <member name="F:HaSdkWrapper.config_gateway.people_red">
            config_people_red
        </member>
        <member name="F:HaSdkWrapper.config_gateway.park">
            config_gw_park
        </member>
        <member name="F:HaSdkWrapper.config_gateway.carpos">
            config_gw_car_port
        </member>
        <member name="F:HaSdkWrapper.config_gateway.http">
            config_http
        </member>
        <member name="F:HaSdkWrapper.config_gateway.device_group">
            config_device_group
        </member>
        <member name="F:HaSdkWrapper.CONF_TEMP.enableLiveImage">
            char
        </member>
        <member name="F:HaSdkWrapper.CONF_TEMP.resv">
            char[124]
        </member>
        <member name="F:HaSdkWrapper.CONF_TEMP.authKey">
            char[128]
        </member>
        <member name="F:HaSdkWrapper.CONF_TEMP.authValue">
            char[256]
        </member>
        <member name="F:HaSdkWrapper.CONF_TEMP.authResult">
            int
        </member>
        <member name="F:HaSdkWrapper.RPlate.plate">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.RPlate.plateColor">
            int
        </member>
        <member name="F:HaSdkWrapper.RPlate.plateX">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RPlate.plateY">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RPlate.plateW">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RPlate.plateH">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RPlate.platerealty">
            float
        </member>
        <member name="F:HaSdkWrapper.reco_extra_info.lane">
            int
        </member>
        <member name="F:HaSdkWrapper.reco_extra_info.diff">
            int
        </member>
        <member name="F:HaSdkWrapper.reco_extra_info.number">
            int
        </member>
        <member name="F:HaSdkWrapper.reco_extra_info.plate">
            RPlate
        </member>
        <member name="F:HaSdkWrapper.reco_extra_info.w">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.reco_extra_info.h">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.reco_extra_info.len">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.reco_extra_info.imgdata">
            char*
        </member>
        <member name="F:HaSdkWrapper.ServiceParam.port">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.ServiceParam.max_clients">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.ServiceParam.heart_timeout">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.ServiceParam.resv">
            unsigned char[4]
        </member>
        <member name="F:HaSdkWrapper.CameraParam.stream_url">
            char[128]
        </member>
        <member name="F:HaSdkWrapper.CameraParam.stream_port">
            short
        </member>
        <member name="F:HaSdkWrapper.CameraParam.control_port">
            short
        </member>
        <member name="F:HaSdkWrapper.CameraParam.video_osd">
            char[192]
        </member>
        <member name="F:HaSdkWrapper.CameraParam.fps">
            char
        </member>
        <member name="F:HaSdkWrapper.CameraParam.enable_ae">
            char
        </member>
        <member name="F:HaSdkWrapper.CameraParam.max_exposure">
            short
        </member>
        <member name="F:HaSdkWrapper.CameraParam.max_gain">
            short
        </member>
        <member name="F:HaSdkWrapper.CameraParam.contrast">
            short
        </member>
        <member name="F:HaSdkWrapper.CameraParam.resv">
            char[178]
        </member>
        <member name="F:HaSdkWrapper.AppServicesParam.config_service">
            ServiceParam
        </member>
        <member name="F:HaSdkWrapper.AppServicesParam.query_service">
            ServiceParam
        </member>
        <member name="F:HaSdkWrapper.AppServicesParam.log_service">
            ServiceParam
        </member>
        <member name="F:HaSdkWrapper.AppServicesParam.resv_service">
            ServiceParam
        </member>
        <member name="F:HaSdkWrapper.DescriptionParam.addr_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.DescriptionParam.addr_name">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.DescriptionParam.device_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.DescriptionParam.resv">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.AppPrivateParam.resv">
            char[512]
        </member>
        <member name="F:HaSdkWrapper.AppCommonParam.services">
            AppServicesParam
        </member>
        <member name="F:HaSdkWrapper.AppCommonParam.description">
            DescriptionParam
        </member>
        <member name="F:HaSdkWrapper.AppCommonParam.resv">
            char[256]
        </member>
        <member name="F:HaSdkWrapper.PlatformServicesParam.config_service">
            ServiceParam
        </member>
        <member name="F:HaSdkWrapper.PlatformServicesParam.stream_service">
            ServiceParam
        </member>
        <member name="F:HaSdkWrapper.TemporaryParam.enable_video">
            char
        </member>
        <member name="F:HaSdkWrapper.TemporaryParam.resv">
            char[27]
        </member>
        <member name="F:HaSdkWrapper.PlatformParam.services">
            PlatformServicesParam
        </member>
        <member name="F:HaSdkWrapper.PlatformParam.camera">
            CameraParam
        </member>
        <member name="F:HaSdkWrapper.PlatformParam.resv">
            char[112]
        </member>
        <member name="F:HaSdkWrapper.StreamParam.video_format">
            int
        </member>
        <member name="F:HaSdkWrapper.StreamParam.resv">
            char[60]
        </member>
        <member name="F:HaSdkWrapper.AppParam.common">
            AppCommonParam
        </member>
        <member name="F:HaSdkWrapper.AppParam.priv">
            AppPrivateParam
        </member>
        <member name="F:HaSdkWrapper.FtpClientParam.ip">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FtpClientParam.port">
            int
        </member>
        <member name="F:HaSdkWrapper.FtpClientParam.user">
            char[10]
        </member>
        <member name="F:HaSdkWrapper.FtpClientParam.password">
            char[10]
        </member>
        <member name="F:HaSdkWrapper.TcpClientParam.ip">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.TcpClientParam.port">
            int
        </member>
        <member name="F:HaSdkWrapper.HttpClientParam.url">
            char[40]
        </member>
        <member name="F:HaSdkWrapper.Anonymous_c922597f_4bac_4040_a652_e671cc18f637.ftp">
            FtpClientParam
        </member>
        <member name="F:HaSdkWrapper.Anonymous_c922597f_4bac_4040_a652_e671cc18f637.tcp">
            TcpClientParam
        </member>
        <member name="F:HaSdkWrapper.Anonymous_c922597f_4bac_4040_a652_e671cc18f637.http">
            HttpClientParam
        </member>
        <member name="F:HaSdkWrapper.FaceSystemConfig.temp">
            TemporaryParam
        </member>
        <member name="F:HaSdkWrapper.FaceSystemConfig.platform">
            PlatformParam
        </member>
        <member name="F:HaSdkWrapper.FaceSystemConfig.stream">
            StreamParam
        </member>
        <member name="F:HaSdkWrapper.FaceSystemConfig.app">
            AppParam
        </member>
        <member name="F:HaSdkWrapper.Point.x">
            int
        </member>
        <member name="F:HaSdkWrapper.Point.y">
            int
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.roi_border_num">
            char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.enable_match">
            char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.enable_debug">
            char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.enable_dereplication">
            char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.replication_timeout">
            char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.replication_interval">
            char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.resv1">
            char[2]
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.output_form">
            ImageForm->Anonymous_7aca3c83_72c5_4283_b7a5_9c634b4243df
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.full_credit">
            float
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.match_score">
            short
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.gpio_enable_white">
            char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.gpio_enable_black">
            char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.gpio_enable_resv">
            char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.serial_send_flag">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.serial_databit">
            unsigned char[2]
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.serial_parity">
            unsigned char[2]
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.serial_stopbit">
            unsigned char[2]
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.serial_baudrate">
            int[2]
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.light_mode">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.light_level">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.light_threshold">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.resv2">
            char[89]
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.roi">
            Point[6]
        </member>
        <member name="F:HaSdkWrapper.FacePrivateParam.resv">
            char[336]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.sequence_id">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.realtime_data">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.packet_id">
            char[64]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.device_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.addr_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.direction_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.camera_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.lane_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.addr_name">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.direction_name">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_x">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_y">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_w">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_h">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_confidence">
            int
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_color">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.vehicle_style">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.vehicle_color">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.triger_type">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.redlight_begin_sec">
            int
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.redlight_begin_usec">
            int
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.system_type">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.vio_type">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.vehicle_speed">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.limit_speed">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.recoImageIndex">
            int
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.vehicle_x">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.vehicle_y">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.vehicle_w">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.vehicle_h">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.red_lamp_x">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.red_lamp_y">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.red_lamp_w">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.red_lamp_h">
            unsigned short[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.vio_red_lamp_index">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.direction">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.reserved">
            char[56]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.img_num">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.video_num">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_img_num">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.face_num">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.img_len">
            unsigned int[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.video_len">
            unsigned int[2]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_img_len">
            unsigned int[2]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.face_img_len">
            unsigned int[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.img_format">
            char[8]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.video_format">
            char[8]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_img_format">
            char[8]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.face_img_format">
            char[8]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.img_time_sec">
            int[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.img_time_usec">
            int[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.video_start_sec">
            int[2]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.video_start_usec">
            int[2]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.video_end_sec">
            int[2]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.video_end_usec">
            int[2]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.face_x">
            unsigned short[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.face_y">
            unsigned short[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.face_w">
            unsigned short[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.face_h">
            unsigned short[32]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.img">
            unsigned char*[4]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.video">
            unsigned char*[2]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.plate_img">
            unsigned char*[2]
        </member>
        <member name="F:HaSdkWrapper.pkg_vehicle.face_img">
            unsigned char*[32]
        </member>
        <member name="F:HaSdkWrapper.FORMAT_ID.FORMAT_ID_JPEG">
            FORMAT_ID_JPEG -> 1
        </member>
        <member name="F:HaSdkWrapper.FORMAT_ID.FORMAT_ID_H264">
            FORMAT_ID_H264 -> 2
        </member>
        <member name="F:HaSdkWrapper.FORMAT_ID.FORMAT_ID_AVI">
            FORMAT_ID_AVI -> 3
        </member>
        <member name="F:HaSdkWrapper.FORMAT_ID.FORMAT_ID_GRAY_8">
            FORMAT_ID_GRAY_8 -> 4
        </member>
        <member name="T:HaSdkWrapper.NativeMethods">
            <summary>
            安全帽禁止通行
            </summary>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.discover_client_init">
            Return Type: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.discover_client_deinit">
            Return Type: void
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.discover_reg_ipscan_cb(HaSdkWrapper.discover_ipscan_cb_t,System.Int32)">
             Return Type: void
            cb: discover_ipscan_cb_t
            usr_param: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.discover_ipscan">
            Return Type: void
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.discover_print_ipscan(HaSdkWrapper.ipscan_t@)">
             Return Type: void
            ipscan: ipscan_t*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.discover_setip_bymac(System.String,System.String,System.String,System.String)">
             Return Type: void
            mac: char*
            ip: char*
            netmask: char*
            gateway: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetFastFace(System.Int32)">
             Return Type: int
            mode: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetStreamFmt(System.IntPtr,System.Int32)">
             Return Type: void
            cam: void*
            decodeFmt: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_StopStreamEx(System.IntPtr,System.IntPtr)">
             Return Type: void
            cam: void*
            hWnd: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetGatewayControlType(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: void*
            type: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetGatewayControlType(System.IntPtr,System.Int32)">
             Return Type: int
            cam: void*
            type: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetAlarmIoNum(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: void*
            IoNum: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetAlarmIoNum(System.IntPtr,System.Int32)">
             Return Type: int
            cam: void*
            IoNum: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetAlarmDuration(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: void*
            duration: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetAlarmDuration(System.IntPtr,System.Int32)">
             Return Type: int
            cam: void*
            duration: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetWiegandType(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: void*
            type: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetWiegandType(System.IntPtr,System.Int32)">
             Return Type: int
            cam: void*
            type: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetWiegandDcode(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: void*
            dcode: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetWiegandDcode(System.IntPtr,System.Int32)">
             Return Type: int
            cam: void*
            dcode: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetWiegandPublicCardNO(System.IntPtr,System.UInt32@)">
             Return Type: int
            cam: void*
            cardNo: unsigned int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetWiegandPublicCardNO(System.IntPtr,System.UInt32)">
             Return Type: int
            cam: void*
            cardNo: unsigned int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetWiegandAutoCardNoMin(System.IntPtr,System.UInt32@)">
             Return Type: int
            cam: void*
            cardNoMin: unsigned int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetWiegandAutoCardNoMin(System.IntPtr,System.UInt32)">
             Return Type: int
            cam: void*
            cardNoMin: unsigned int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetWiegandAutoCardNoMax(System.IntPtr,System.UInt32@)">
             Return Type: int
            cam: void*
            cardNoMax: unsigned int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetWiegandAutoCardNoMax(System.IntPtr,System.UInt32)">
             Return Type: int
            cam: void*
            cardNoMax: unsigned int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetFaceDetectMinRect(System.IntPtr,System.UInt32@)">
             Return Type: int
            cam: void*
            size: unsigned int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetFaceDetectMinRect(System.IntPtr,System.UInt32)">
             Return Type: int
            cam: void*
            size: unsigned int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetBrightness(System.IntPtr,System.IntPtr)">
             Return Type: int
            cam: void*
            brightness: unsigned char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetBrightness(System.IntPtr,System.Byte)">
             Return Type: int
            cam: void*
            brightness: unsigned char
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetSaturation(System.IntPtr,System.IntPtr)">
             Return Type: int
            cam: void*
            saturation: unsigned char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetSaturation(System.IntPtr,System.Byte)">
             Return Type: int
            cam: void*
            saturation: unsigned char
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetServerSdkParam(System.IntPtr,System.Int32@,System.IntPtr,System.Int32@,System.IntPtr)">
             Return Type: int
            cam: void*
            enable: int*
            ip: char*
            port: int*
            resv: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetServerSdkParam(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)">
             Return Type: int
            cam: void*
            enable: int
            ip: char*
            port: int
            resv: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_Init">
            Return Type: void
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_InitEx(System.UInt32)">
             Return Type: void
            maxCamNum: unsigned int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_InitFaceModel(System.String)">
             Return Type: int
            faceModel: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DeInit">
            Return Type: void
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegConnectEventCb(HaSdkWrapper.HA_ConnectEventCb_t,System.Int32)">
             Return Type: void
            cb: HA_ConnectEventCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegConnectEventCbEx(System.IntPtr,HaSdkWrapper.HA_ConnectEventCb_t,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            cb: HA_ConnectEventCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegLiveStreamCb(HaSdkWrapper.HA_LiveStreamCb_t,System.Int32)">
             Return Type: void
            cb: HA_LiveStreamCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegLiveStreamCbEx(System.IntPtr,HaSdkWrapper.HA_LiveStreamCb_t,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            cb: HA_LiveStreamCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegDataReadCb(HaSdkWrapper.HA_DataReadCb_t,System.Int32)">
             Return Type: void
            cb: HA_DataReadCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegDataReadCbEx(System.IntPtr,HaSdkWrapper.HA_DataReadCb_t,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            cb: HA_DataReadCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegFaceRecoCb(System.IntPtr,HaSdkWrapper.HA_FaceRecoCb_t,System.IntPtr)">
             Return Type: void
            cam: HA_Cam*
            cb: HA_FaceRecoCb_t
            usrParam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegGpioInputCb(System.IntPtr,HaSdkWrapper.HA_GpioInputCb_t,System.IntPtr)">
            <summary>
            注册Gpio
            </summary>
            <param name="cam"></param>
            <param name="cb"></param>
            <param name="usrParam"></param>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegQRCodeCb(System.IntPtr,HaSdkWrapper.HA_QRCodeCb_t,System.IntPtr)">
            <summary>
            注册二维码回调
            </summary>
            <param name="cam"></param>
            <param name="cb"></param>
            <param name="usrParam"></param>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegDiscoverIpscanCb(HaSdkWrapper.discover_ipscan_cb_t,System.Int32)">
             Return Type: void
            cb: discover_ipscan_cb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegOfflineDataCb(System.IntPtr,HaSdkWrapper.HA_OfflineFeeData_t,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            cb: HA_OfflineFeeData_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegQueryEntryPlateInfoCb(System.IntPtr,HaSdkWrapper.HA_OfflineQueriedEntryInfoCb_t,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            cb: HA_OfflineQueriedEntryInfoCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryOfflineEntryTimeByPlate(System.IntPtr,System.String)">
             Return Type: void
            cam: HA_Cam*
            plate: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryOfflineFeeDataCountAndMoney(System.IntPtr,System.String,System.String,System.Int32,System.IntPtr,System.Int32@,System.Single@)">
             Return Type: int
            cam: HA_Cam*
            pStartTime: char*
            pEndTime: char*
            queryStyle: int
            pPlateOrVehicleType: void*
            pCount: int*
            pMoneyTotal: float*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryOfflineFeeDataByPage(System.IntPtr,System.String,System.String,System.Int32,System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            pStartTime: char*
            pEndTime: char*
            queryStyle: int
            pPlateOrVehicleType: void*
            startPos: int
            endPos: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ClearOfflneFeeData(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegQueryOfflineFeeDataByPageCb(System.IntPtr,HaSdkWrapper.HA_OfflineFeeDataQueriedByPageCb_t,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            cb: HA_OfflineFeeDataQueriedByPageCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DiscoverIpscan">
            Return Type: void
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetIpBymac(System.String,System.String,System.String,System.String)">
             Return Type: void
            mac: char*
            ip: char*
            netmask: char*
            gateway: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetCamType(HaSdkWrapper.CAM_TYPE)">
             Return Type: void
            camType: CAM_TYPE
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetCharEncode(HaSdkWrapper.CHAR_ENCODE)">
             Return Type: void
            charEncode: CHAR_ENCODE
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_Connected(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_Connect(System.String,System.UInt16,System.String,System.String,System.Int32@)">
             Return Type: HA_Cam*
            ip: char*
            port: unsigned short
            usrName: char*
            password: char*
            errorNum: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ConnectEx(System.String,System.UInt16,System.String,System.String,System.Int32@,System.UInt32,System.Boolean)">
             Return Type: HA_Cam*
            ip: char*
            port: unsigned short
            usrName: char*
            password: char*
            errorNum: int*
            channel: unsigned int
            autoReconn: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ConnectRelayServer(System.String,System.UInt16,System.String,System.String,System.Int32@)">
            @brief   连接相机到服务器 
            @param   ip[in]   服务器ip
            @param   port[in]   服务器端口
            @param   usrName[in]   保留
            @param   password[in]  保留
            @param   errorNum[out]  连接失败错误号，0为连接成功，-1为连接失败
            @return  NULL 连接失败
            @return  非NULL 连接成功  
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ModifyUserNamePasswd(System.IntPtr,System.String,System.String,System.String,System.String)">
             Return Type: int
            cam: HA_Cam*
            usrNameOld: char*
            passwordOld: char*
            usrNameNew: char*
            passwordNew: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DisConnect(System.IntPtr)">
             Return Type: void
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_StartStream(System.IntPtr,System.IntPtr)">
             Return Type: void
            cam: HA_Cam*
            hWnd: HWND->HWND__*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_StartStreamEx(System.IntPtr,System.IntPtr,HaSdkWrapper.HA_DecodeImageCb_t,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            hWnd: HWND->HWND__*
            cb: HA_DecodeImageCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_StopStream(System.IntPtr)">
             Return Type: void
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_CapImgToFile(System.IntPtr,System.String)">
             Return Type: int
            cam: HA_Cam*
            fileName: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_CapImgToBuffer(System.IntPtr,System.IntPtr,System.Int32,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            buffer: unsigned char*
            bufferSize: int
            len: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_Trigger(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetWhiteList(System.IntPtr,HaSdkWrapper.HA_AllowList@,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            allowList: HA_AllowList*
            listNum: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetWhiteList(System.IntPtr,HaSdkWrapper.HA_AllowList@,System.Int32,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            allowList: HA_AllowList*
            maxNum: int
            listNum: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetWhiteListByPage(System.IntPtr,System.Int32,System.Int32,HaSdkWrapper.HA_AllowList@,System.Int32@,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            pageNum: int
            recordNumPerPage: int
            allowList: HA_AllowList*
            listNum: int*
            totalPages: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ClearWhiteList(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_InsertWhiteList(System.IntPtr,HaSdkWrapper.HA_AllowList@)">
             Return Type: int
            cam: HA_Cam*
            wList: HA_AllowList*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_UpdateWhiteListByPlate(System.IntPtr,HaSdkWrapper.HA_AllowList@)">
             Return Type: int
            cam: HA_Cam*
            wList: HA_AllowList*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DeleteWhiteListByPlate(System.IntPtr,System.String)">
             Return Type: int
            cam: HA_Cam*
            plate: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SearchWhiteListByPlate(System.IntPtr,System.String,HaSdkWrapper.HA_AllowList@)">
             Return Type: int
            cam: HA_Cam*
            plate: char*
            wList: HA_AllowList*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetWhiteListCount(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetSystemVersion(System.IntPtr,HaSdkWrapper.VERSION@)">
             Return Type: int
            cam: HA_Cam*
            version: VERSION*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetSystemVersionEX(System.IntPtr,HaSdkWrapper.VERSION@,System.String,System.String)">
             Return Type: int
            cam: HA_Cam*
            version: VERSION*
            usrName: char*
            password: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetGatewayConfig(System.IntPtr,HaSdkWrapper.config_gateway@)">
             Return Type: int
            cam: HA_Cam*
            cfg: config_gateway*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetFaceSystemCfg(System.IntPtr,HaSdkWrapper.FaceSystemConfig@)">
             Return Type: int
            cam: HA_Cam*
            cfg: FaceSystemConfig*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetGatewayConfig(System.IntPtr,HaSdkWrapper.config_gateway@)">
             Return Type: int
            cam: HA_Cam*
            cfg: config_gateway*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetFaceSystemCfg(System.IntPtr,HaSdkWrapper.FaceSystemConfig@)">
             Return Type: int
            cam: HA_Cam*
            cfg: FaceSystemConfig*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetMatchScore(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            score: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetMatchScore(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            score: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetOutputDelay(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            delay: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetOutputDelay(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            delay: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetOutputCtl(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            ctl: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetOutputCtl(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            ctl: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetMatchLevel(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            level: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetMatchLevel(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            level: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetMatchEnable(System.IntPtr,System.Boolean@)">
             Return Type: int
            cam: HA_Cam*
            enable: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetMatchEnable(System.IntPtr,System.Boolean)">
             Return Type: int
            cam: HA_Cam*
            enable: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetDebugEnable(System.IntPtr,System.Boolean@)">
             Return Type: int
            cam: HA_Cam*
            enable: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetDebugEnable(System.IntPtr,System.Boolean)">
             Return Type: int
            cam: HA_Cam*
            enable: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetGatewayOfflineMode(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            offlineFlag: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetGatewayOfflineMode(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            offlineFlag: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetOfflinePlateInfoCb(System.IntPtr,HaSdkWrapper.HA_PlateInfoCb_t,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            cb: HA_PlateInfoCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetTransfferOffline(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            transFlag: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetTransfferOffline(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            transFlag: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetIOOutput(System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            index: int
            state: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetIOOutputAuto(System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            index: int
            timeDuration: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetAlarm(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            open: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetIOState(System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            index: int
            state: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetAlarmAuto(System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            index: int
            timeDuration: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_WhiteListAlarm(System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            inout: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_BlackListAlarm(System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            inout: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetGPIO(System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
            port: int
            inout: int
            resv: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_PlayAudio(System.IntPtr,System.Byte[],System.Int32)">
             Return Type: int
            cam: HA_Cam*
            audio: char*
            len: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegReadTSerialCb(HaSdkWrapper.HA_ReadTSerialCb_t,System.Int32)">
             Return Type: int
            cb: HA_ReadTSerialCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegReadTSerialCbEx(System.IntPtr,HaSdkWrapper.HA_ReadTSerialCb_t,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            cb: HA_ReadTSerialCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegReadGpioCbEx(System.IntPtr,HaSdkWrapper.HA_ReadGpioCb_t,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            cb: HA_ReadGpioCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetTSerial(System.IntPtr,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            index: int
            baudrate: int*
            parity: int*
            databit: int*
            stopbit: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_OpenTSerial(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            index: int
            baudrate: int
            parity: int
            databit: int
            stopbit: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_WriteTSerial(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            index: int
            data: char*
            size: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_CloseTSerial(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            index: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetCamParam(System.IntPtr,HaSdkWrapper.CamCtrl@)">
             Return Type: int
            cam: HA_Cam*
            ctrl: CamCtrl*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RebootCam(System.IntPtr)">
             Return Type: void
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SaveCamParam(System.IntPtr)">
             Return Type: void
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetAutoCtrl(System.IntPtr,HaSdkWrapper.CamCtrlAutoCtrl@)">
             Return Type: void
            cam: HA_Cam*
            ctrl: CamCtrlAutoCtrl*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetImageEnhance(System.IntPtr,HaSdkWrapper.CamCtrlImageEnhance@)">
             Return Type: void
            cam: HA_Cam*
            en: CamCtrlImageEnhance*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetSysTime(System.IntPtr,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            time: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetSysTime(System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            time: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetSysTimeEx(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            year: int
            month: int
            day: int
            hour: int
            minute: int
            second: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetSysTimeEx(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            year: int*
            month: int*
            day: int*
            hour: int*
            minute: int*
            second: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetJpegQ(System.IntPtr,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            q: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetH264(System.IntPtr,System.Int32,System.Int32,System.Int32)">
             Return Type: void
            cam: HA_Cam*
            w: int
            h: int
            bitrate: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ZoomUpStart(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ZoomUpStop(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ZoomDownStart(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ZoomDownStop(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FocusUpStart(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FocusUpStop(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FocusDownStart(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FocusDownStop(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ZoomUp(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ZoomDown(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FocusUp(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FocusDown(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetCustomerSN(System.IntPtr,System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            sn: char*
            SNSize: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_WriteCustomerAuthCode(System.IntPtr,System.Byte[],System.Int32)">
             Return Type: int
            cam: HA_Cam*
            auth: char*
            size: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ReadCustomerAuthCode(System.IntPtr,System.Byte[],System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            auth: char*
            size: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_EncodeJpeg(System.String,System.UInt32,System.UInt32,System.IntPtr,System.UInt32@)">
             Return Type: int
            pRgbBuffer: char*
            dwWidth: unsigned int
            dwHeight: unsigned int
            pJpgBuffer: unsigned char*
            dwJpgSize: unsigned int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DecodeJpeg(System.String,System.Int32,System.IntPtr,System.UInt32@,System.UInt32@)">
             Return Type: int
            srcJpg: char*
            srcJpgLen: int
            desRgb: unsigned char*
            jpgW: unsigned int*
            jpgH: unsigned int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SaveRealDate(System.IntPtr,System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
            sFileName: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_StopSaveRealDate(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_BackupUserDefault(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RestoreUserDefault(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RestorMannuFDefalut(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QuerySDCardInfo(System.IntPtr,System.Int32@,System.Int32@,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            hasSDCard: int*
            totalSize: int*
            usedSize: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FormatSDCard(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_TestAudioItem(System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            audioId: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_Gb23122Utf8(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
             Return Type: int
            inbuf: char*
            inlen: int
            outbuf: char*
            outlen: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_Utf82Gb2312(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
             Return Type: int
            inbuf: char*
            inlen: int
            outbuf: char*
            outlen: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ClearAllCallbacks(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetQueryPlateInfoCb(System.IntPtr,HaSdkWrapper.HA_PlateInfoCb_t,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            cb: HA_PlateInfoCb_t
            usrParam: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryCountByTimeAndPlate(System.IntPtr,System.String,System.String,System.String)">
             Return Type: int
            cam: HA_Cam*
            pStartTime: char*
            pEndTime: char*
            keyword: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FocusAndZoomCtl(System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: void*
            ptzCtl: int
            ctlMode: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DecodeJpgSize(System.IntPtr,System.Int32,System.UInt32@,System.UInt32@)">
             Return Type: int
            srcJpg: char*
            srcJpgLen: int
            jpgW: unsigned int*
            jpgH: unsigned int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryRecordByTimeAndPlate(System.IntPtr,System.String,System.String,System.String)">
             Return Type: int
            cam: HA_Cam*
            pStartTime: char*
            pEndTime: char*
            keyword: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryPageRecordByTimeAndPlate(System.IntPtr,System.String,System.String,System.String,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            pStartTime: char*
            pEndTime: char*
            keyword: char*
            start: int
            end: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryOfflineCountByTime(System.IntPtr,System.String,System.String)">
             Return Type: int
            cam: HA_Cam*
            pStartTime: char*
            pEndTime: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryPageOfflineRecordByTime(System.IntPtr,System.String,System.String,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            pStartTime: char*
            pEndTime: char*
            start: int
            end: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryRecordById(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            id: int
            img: unsigned char*
            imgLen: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryOfflineRecordById(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
             Return Type: int
            cam: HA_Cam*
            id: int
            img: unsigned char*
            imgLen: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetNotifyConnected(System.Int32)">
             Return Type: void
            notify: boolean
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegIOStateCb(System.IntPtr,HaSdkWrapper.HA_IOStateCb_t,System.IntPtr)">
             Return Type: void
            cam: HA_Cam*
            callback: HA_IOStateCb_t
            userParm: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetPlateLogDirectory(System.String)">
             Return Type: void
            dirFullPath: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SaveBMP(System.String,System.String,System.Int32,System.Int32,System.Int32)">
             Return Type: void
            filename: char*
            imgData: char*
            width: int
            height: int
            cn: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SaveJpg(System.String,System.String,System.Int32)">
             Return Type: int
            filename: char*
            jpgBuf: char*
            len: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DeleteFaceDataByPersonID(System.IntPtr,System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
            personID: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DeleteFaceDataAll(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetFaceIDTotal(System.IntPtr)">
             Return Type: int
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_AddJpgFace(System.IntPtr,HaSdkWrapper.FaceFlags@,System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            faceID: FaceFlags*
            jpg: char*
            len: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_AddFaceFlags(System.IntPtr,HaSdkWrapper.FaceFlags@,System.Byte)">
            <summary>
            只添加人脸信息
            </summary>
            <param name="cam"></param>
            <param name="faceID"></param>
            <param name="mod">注册标记 1:注册 0:修改</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SeparateModifyFace(System.IntPtr,HaSdkWrapper.FaceFlags@,System.Byte[],System.UInt32,System.Byte[],System.UInt32,System.UInt32)">
            <summary>
            单项修改
            </summary>
            <param name="cam"></param>
            <param name="faceID"></param>
            <param name="mod"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_AddFace(System.IntPtr,HaSdkWrapper.FaceFlags@,System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            faceID: FaceFlags*
            rgbimage: char*
            width: int
            height: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ModifyJpgFace(System.IntPtr,HaSdkWrapper.FaceFlags@,System.IntPtr,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            faceID: FaceFlags*
            jpg: char*
            len: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ModifyFace(System.IntPtr,HaSdkWrapper.FaceFlags@,System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: HA_Cam*
            faceID: FaceFlags*
            rgbimage: char*
            width: int
            height: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryFaceID(System.IntPtr,HaSdkWrapper.QueryFaceFlags@,System.Int32,System.Boolean,System.Boolean)">
             Return Type: int
            cam: HA_Cam*
            result: QueryFaceFlags*
            record_no: int
            featureFlags: char
            imgFlags: char
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegFaceQueryCb(System.IntPtr,HaSdkWrapper.HA_FaceQueryCb_t,System.IntPtr)">
             Return Type: void
            cam: void*
            cb: HA_FaceQueryCb_t
            usrParam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetSystemTime(System.IntPtr,HaSdkWrapper.SystemTime@)">
             Return Type: int
            cam: void*
            sysTime: SystemTime*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetSystemTime(System.IntPtr,HaSdkWrapper.SystemTime@)">
             Return Type: int
            cam: void*
            sysTime: SystemTime*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetDereplicationEnable(System.IntPtr,System.Int32,System.Int32)">
             Return Type: int
            cam: void*
            enable: int
            timeout: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_ResetFaceConfig(System.IntPtr)">
             Return Type: int
            cam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetMaxExposure(System.IntPtr,System.Int16@)">
             Return Type: int
            cam: void*
            max_exposure: short*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetMaxExposure(System.IntPtr,System.Int16)">
             Return Type: int
            cam: void*
            max_exposure: short
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetMaxGain(System.IntPtr,System.Int16@)">
             Return Type: int
            cam: void*
            max_gain: short*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetMaxGain(System.IntPtr,System.Int16)">
             Return Type: int
            cam: void*
            max_gain: short
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetContrast(System.IntPtr,System.Int16@)">
             Return Type: int
            cam: void*
            contrast: short*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetContrast(System.IntPtr,System.Int16)">
             Return Type: int
            cam: void*
            contrast: short
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetNtpConfig(System.IntPtr,HaSdkWrapper.NtpInfo@)">
             Return Type: int
            cam: void*
            ntpInfo: NtpInfo*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetNtpConfig(System.IntPtr,HaSdkWrapper.NtpInfo@)">
             Return Type: int
            cam: void*
            ntpInfo: NtpInfo*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetNetConfig(System.IntPtr,HaSdkWrapper.SystemNetInfo@)">
             Return Type: int
            cam: void*
            netInfo: SystemNetInfo*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetNetConfig(System.IntPtr,HaSdkWrapper.SystemNetInfo@)">
             Return Type: int
            cam: void*
            netInfo: SystemNetInfo*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetLedMode(System.IntPtr,System.IntPtr)">
             Return Type: int
            cam: void*
            led_mode: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetLedMode(System.IntPtr,System.Byte)">
             Return Type: int
            cam: void*
            led_mode: char
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetLedThreshold(System.IntPtr,System.IntPtr)">
             Return Type: int
            cam: void*
            led_threshold: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetLedThreshold(System.IntPtr,System.Byte)">
             Return Type: int
            cam: void*
            led_threshold: char
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SystemReboot(System.IntPtr)">
             Return Type: int
            cam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_AppReboot(System.IntPtr)">
             Return Type: int
            cam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetJpgFaceFeature(System.IntPtr,System.Int32,System.Single@,System.Int32@)">
             Return Type: int
            jpg: char*
            len: int
            feature: float*
            feature_size: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetFaceFeature(System.IntPtr,System.Int32,System.Int32,System.Single@,System.Int32@)">
             Return Type: int
            rgbimage: char*
            width: int
            height: int
            feature: float*
            feature_size: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryByRole(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
             Return Type: int
            cam: void*
            role: int
            page_no: int
            page_size: int
            featureFlags: char
            imgFlags: char
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetJpgFaceFeature(System.String,System.Int32,System.Single@,System.Int32@)">
             Return Type: int
            jpg: char*
            len: int
            feature: float*
            feature_size: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetFaceFeature(System.String,System.Int32,System.Int32,System.Single@,System.Int32@)">
             Return Type: int
            rgbimage: char*
            width: int
            height: int
            feature: float*
            feature_size: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetMatchScores(System.Single@,System.Single@,System.Int32)">
             Return Type: int
            f1: float*
            f2: float*
            feature_size: int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetJpgFaceRectAndFeature(System.IntPtr,System.Int32,System.IntPtr,System.Int32@,HaSdkWrapper.ha_rect@,System.IntPtr,System.Int32@)">
             Return Type: int
            jpg: char*
            len: int
            feature: float*
            feature_size: int*
            faceRect: void*
            faceImgJpg: unsigned char*
            faceJpgLen: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetDrawRect(System.IntPtr,HaSdkWrapper.ha_rect@)">
             Return Type: void
            cam: HA_Cam*
            rect: ha_rect*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_StartDrawRect(System.IntPtr)">
             Return Type: void
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_StopDrawRect(System.IntPtr)">
             Return Type: void
            cam: HA_Cam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetAuthInfo(System.IntPtr,System.String,System.String,HaSdkWrapper.AuthParam@)">
             Return Type: int
            cam: void*
            user_name: char*
            passwd: char*
            authInfo: AuthParam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetAuthInfo(System.IntPtr,System.String,System.String,HaSdkWrapper.AuthParam@)">
             Return Type: int
            cam: void*
            user_name: char*
            passwd: char*
            authInfo: AuthParam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetFaceAppParam(System.IntPtr,HaSdkWrapper.FaceAppParam@)">
             Return Type: int
            cam: void*
            param: FaceAppParam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetFaceAppParam(System.IntPtr,HaSdkWrapper.FaceAppParam@)">
             Return Type: int
            cam: void*
            param: FaceAppParam*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegAlarmRecordCb(System.IntPtr,HaSdkWrapper.HA_AlarmRecordCb_t,System.IntPtr)">
             Return Type: void
            cam: void*
            cb: HA_AlarmRecordCb_t
            usrParam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegAlarmRequestCb(System.IntPtr,HaSdkWrapper.HA_AlarmRequestCb_t,System.IntPtr)">
             Return Type: void
            cam: void*
            cb: HA_AlarmRequestCb_t
            usrParam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_JpgFacesEx(System.IntPtr,System.Int32,HaSdkWrapper.FaceFlags@,HaSdkWrapper.FaceImage[],System.Int32,System.Int32,HaSdkWrapper.ErrorFaceImage[],System.Int32@)">
             Return Type: int
            cam: void*
            type: int
            faceID: FaceFlags*
            imgs: FaceImage*
            img_count: int
            picture_flags: int
            err_imgs: ErrorFaceImage*
            err_imgs_count: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_QueryFaceRecord(System.IntPtr,System.Int32,System.Int32,HaSdkWrapper.RecordCondition@)">
             Return Type: int
            cam: void*
            page_no: int
            page_size: int
            condition: RecordCondition*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DeleteFaceRecordBySequence(System.IntPtr,System.UInt32)">
             Return Type: int
            cam: void*
            sequence: unsigned int
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_DeleteFaceRecordAll(System.IntPtr)">
             Return Type: int
            cam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegFaceRecordQueryCb(System.IntPtr,HaSdkWrapper.HA_FaceRecordCb_t,System.IntPtr)">
             Return Type: void
            cam: void*
            cb: HA_FaceRecordCb_t
            usrParam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetRecorderEnable(System.IntPtr,System.Byte@)">
             Return Type: int
            cam: void*
            enable: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetRecorderEnable(System.IntPtr,System.Byte)">
             Return Type: int
            cam: void*
            enable: char
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetRecorderResumeEnable(System.IntPtr,System.Byte@)">
             Return Type: int
            cam: void*
            enable: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetRecorderResumeEnable(System.IntPtr,System.Byte)">
             Return Type: int
            cam: void*
            enable: char
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetJpgFeatureImage(System.Byte[],System.Int32,System.Byte[],System.Int32@,System.Int32@,System.Int32@,System.Byte[],System.Int32@)">
             Return Type: int
            jpg: char*
            len: int
            twist_image: unsigned char*
            twist_size: int*
            twist_width: int*
            twist_height: int*
            faceImgJpg: unsigned char*
            faceJpgLen: int*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_RegSnapshotCb(System.IntPtr,HaSdkWrapper.HA_SnapshotCb_t,System.IntPtr)">
             Return Type: void
            cam: void*
            cb: HA_SnapshotCb_t
            usrParam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_Snapshot(System.IntPtr)">
             Return Type: int
            cam: void*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetSDKPassword(System.String)">
             Return Type: int
            password: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetCamSDKPassword(System.IntPtr,System.String)">
             Return Type: int
            cam: void*
            password: char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetMatchMode(System.IntPtr,System.Byte@)">
             Return Type: int
            cam: void*
            mode: unsigned char*
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetMatchMode(System.IntPtr,System.Byte)">
             Return Type: int
            cam: void*
            mode: unsigned char
        </member>
        <!-- Badly formed XML comment ignored for member "M:HaSdkWrapper.NativeMethods.HA_GetAutoCleanEnable(System.IntPtr,System.Int32@)" -->
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetWDR(System.IntPtr,System.Byte@,HaSdkWrapper.HourSchedule@)">
            <summary>
            获取相机宽动态
            </summary>
            <param name="cam"></param>
            <param name="pro"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetWDR(System.IntPtr,System.Byte,HaSdkWrapper.HourSchedule)">
            <summary>
              设置相机宽动态
            </summary>
            <param name="cam"></param>
            <param name="pro"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetScreenOsdTitle(System.IntPtr,System.Byte[])">
            <summary>
            设置屏幕显示
            </summary>
            <param name="cam"></param>
            <param name="screen_title"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_TTSPlayAudio(System.IntPtr,System.Byte[])">
            <summary>
            语音播放
            </summary>
            <param name="cam"></param>
            <param name="screen_title"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetUploadConfig(System.IntPtr,HaSdkWrapper.ClientParam@)">
            <summary>
            获取上传数据
            </summary>
            <param name="cam"></param>
            <param name="UploadParam"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetUploadConfig(System.IntPtr,HaSdkWrapper.ClientParam@)">
            <summary>
            设置上传数据
            </summary>
            <param name="cam"></param>
            <param name="UploadParam"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetFaceSystemVersionEx(System.IntPtr,HaSdkWrapper.SystemVersionInfo@)">
            <summary>
            获取相机设备信息
            </summary>
            <param name="cam"></param>
            <param name="UploadParam"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FaceJpgLegal(System.IntPtr,System.Int32)">
            <summary>
            检测图片
            </summary>
            <param name="jpg"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetDereplicationgConfig(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            获得去重复
            </summary>
            <param name="cam"></param>
            <param name="enable"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetDereplicationEnable(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            设置去重复
            </summary>
            <param name="cam"></param>
            <param name="enable"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetExtranetParam(System.IntPtr,HaSdkWrapper.ExtranetParam@)">
            <summary>
            获取外网穿透
            </summary>
            <param name="cam"></param>
            <param name="extr"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetExtranetParam(System.IntPtr,HaSdkWrapper.ExtranetParam)">
            <summary>
            设置外网穿透
            </summary>
            <param name="cam"></param>
            <param name="extr"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetAudioVolume(System.IntPtr,System.Int32@)">
            <summary>
            获取设备音量
            </summary>
            <param name="cam"></param>
            <param name="audio_volume"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetAudioVolume(System.IntPtr,System.Int32)">
            <summary>
            设置设备音量
            </summary>
            <param name="cam"></param>
            <param name="audio_volume"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetAudioList(System.IntPtr,System.IntPtr,System.Int32,System.Int32@)">
            <summary>
            获取音频
            </summary>
            <param name="cam"></param>
            <param name="items"></param>
            <param name="itemBufNum"></param>
            <param name="itemNum"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_TestAudioItemByName(System.IntPtr,HaSdkWrapper.AudioItem@)">
            <summary>
            播放音频
            </summary>
            <param name="cam"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetLcdDisplayItems(System.IntPtr,System.Int32)">
            <summary>
            设置LCD显示屏显示项
            </summary>
            <param name="cam"></param>
            <param name="itme"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetLcdDisplayItems(System.IntPtr,System.Int32@)">
            <summary>
            获取LCD显示屏显示项
            </summary>
            <param name="cam"></param>
            <param name="itme"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetPersonDisplayOptions(System.IntPtr,System.Int32@)">
            <summary>
            获取比对成功显示项
            </summary>
            <param name="cam"></param>
            <param name="itme"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetPersonDisplayOptions(System.IntPtr,System.Int32)">
            <summary>
            设置比对成功显示项
            </summary>
            <param name="cam"></param>
            <param name="Options"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetflipEnable(System.IntPtr,System.Byte@)">
            <summary>
            获取镜像显示开关
            </summary>
            <param name="cam"></param>
            <param name="Options"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetflipEnable(System.IntPtr,System.Byte)">
            <summary>
            设置镜像显示开关
            </summary>
            <param name="cam"></param>
            <param name="Options"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetLedLevel(System.IntPtr,System.Byte@)">
            <summary>
            获取显示屏亮度
            </summary>
            <param name="cam"></param>
            <param name="led_level"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetLedLevel(System.IntPtr,System.Byte)">
            <summary>
            设置屏幕亮度
            </summary>
            <param name="cam"></param>
            <param name="led_level"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetUploadDomain(System.IntPtr,System.Byte[])">
            <summary>
            获取上传方式域名
            </summary>
            <param name="cam"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetUploadDomain(System.IntPtr,System.Byte[])">
            <summary>
            设置长传方式域名
            </summary>
            <param name="cam"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetExtranetDomain(System.IntPtr,System.Byte[])">
            <summary>
            获取外网穿透域名
            </summary>
            <param name="cam"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetExtranetDomain(System.IntPtr,System.Byte[])">
            <summary>
            设置外网穿透域名
            </summary>
            <param name="cam"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetTemperaturEnable(System.IntPtr,System.Int32@)">
            <summary>
            获取体温检测开关
            </summary>
            <param name="cam"></param>
            <param name="enable">0:关 1:开</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetTemperaturEnable(System.IntPtr,System.Int32)">
            <summary>
            设置体温检测开关
            </summary>
            <param name="cam"></param>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetTemperaturLimit(System.IntPtr,System.Single,System.Int32)">
            <summary>
            设置是否限制体温
            </summary>
            <param name="cam"></param>
            <param name="temperatur">高于此温度不开闸</param>
            <param name="enable">0:关 1:开 打开后体温高于temperatur不开闸</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetTemperaturLimit(System.IntPtr,System.Single@,System.Int32@)">
            <summary>
            获取是否限制体温
            </summary>
            <param name="cam"></param>
            <param name="temperatur">高于此温度不开闸</param>
            <param name="enable">0:关 1:开 打开后体温高于temperatur不开闸</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SendJson(System.IntPtr,System.Byte[],System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            发送json命令到相机
            </summary>
            <param name="cam"></param>
            <param name="cmd"></param>
            <param name="json"></param>
            <param name="jsonSize"></param>
            <param name="replyJson"></param>
            <param name="buffSize"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetMaskInspectEnable(System.IntPtr,System.Int32@)">
            <summary>
            获取口罩检查开关
            </summary>
            <param name="cam"></param>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetMaskInspectEnable(System.IntPtr,System.Int32)">
            <summary>
            设置口罩检查开关
            </summary>
            <param name="cam"></param>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetGpioWorkState(System.IntPtr,System.Byte@)">
            <summary>
            获取相机gpio工作状态  gpio状态。1：常开模式 0：常闭模式
            </summary>
            <param name="cam"></param>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetGpioWorkState(System.IntPtr,System.Byte)">
            <summary>
            设置相机gpio工作状态  gpio状态。1：常开模式 0：常闭模式
            </summary>
            <param name="cam"></param>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetFaceSystemCfgEx(System.IntPtr,HaSdkWrapper.FaceSystemConfigex@)">
            <summary>
            获取应用参数
            </summary>
            <param name="cam"></param>
            <param name="conf"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetFaceSystemCfgEx(System.IntPtr,HaSdkWrapper.FaceSystemConfigex@)">
            <summary>
            设置应用参数
            </summary>
            <param name="cam"></param>
            <param name="conf"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_SetFaceCheckRotate(System.Int32)">
            <summary>
            打开检测旋转人脸 打开后自动修正旋转方向错误的图片 注:打开后会影响检测速度
            </summary>
            <param name="cam"></param>
            <param name="enable">enable 开关 0:关 !0:开</param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetVersion(HaSdkWrapper.HaSdkVersion@)">
            <summary>
            获取版本信息
            </summary>
            <param name="cam"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_GetJpgFeatureImageNew(System.Byte[],System.Int32,System.Byte[],System.Int32@,System.Byte[],System.Int32@,System.Byte[])">
            @brief  新算法提取归一化图像和人脸略缩图像 提取成功后需调用 HA_FeatureConvert转换为可注册数据
            @param  [IN] jpg 图片数据 支持bmp,jpg,png
            @param  [IN] len 图片数据长度
            @param  [OUT] feature_image 新归一化图像数据 注:至少分配110K
            @param  [IN|OUT] feature_size in:twist_image内存大小 out:归一化数据大小
            @param  [OUT] faceImgJpg 抠出的人脸略缩图像 注:建议分配 10K 以上
            @param  [IN|OUT] faceJpgLen in: faceImgJpg 分配的内存大小 out:抠出的人脸略缩图像长度
            @param  [IN] twist_version 算法版本可为NULL 为NULL时会提取所有版本
            @return 返回值为0表示成功，返回负数表示失败，具体参考错误码
        </member>
        <member name="M:HaSdkWrapper.NativeMethods.HA_FeatureConvert(System.IntPtr,System.Byte[],System.Int32,HaSdkWrapper.FaceImage@,System.String)">
              @brief  转换新算法归一化数据
              @param  [IN] cam 相机句柄 可为NULL 为NULL时通过[twist_version]判断要准换的版本
              @param  [IN] feature_image 新归一化图像数据
              @param  [IN] feature_size 归一化图像数据长度
              @param  [OUT] twist_image 归一化数据
            				struct FaceImage
            				{
            					int img_seq;    //图片编号 填0
            					int img_fmt;    //图片格式 填1
            					unsigned char *img; // 归一化数据 需自行分配内存 建议至少70K
            					int img_len;    //in:img 分配的内存长度 out:归一化数据长度
            					int width;      //图像宽度 输出
            					int height;     //图像高度 输出
            				};
              @param  [IN] twist_version 算法版本 可为NULL 为NULL时通过[cam]判断要转换的版本 
              @return 返回值为0表示成功，返回负数表示失败，具体参考错误码
        </member>
        <member name="F:HaSdkWrapper.ha_rect.x">
            short
        </member>
        <member name="F:HaSdkWrapper.ha_rect.y">
            short
        </member>
        <member name="F:HaSdkWrapper.ha_rect.width">
            short
        </member>
        <member name="F:HaSdkWrapper.ha_rect.height">
            short
        </member>
        <member name="T:HaSdkWrapper.HA_ConnectEventCb_t">
             Return Type: void
            cam: HA_Cam*
            ip: char*
            port: unsigned short
            event: int
            usrParam: int
        </member>
        <member name="T:HaSdkWrapper.HA_LiveStreamCb_t">
             Return Type: void
            cam: HA_Cam*
            ip: char*
            stream: HA_LiveStream*
            usrParam: int
        </member>
        <member name="T:HaSdkWrapper.HA_DataReadCb_t">
             Return Type: void
            cam: HA_Cam*
            ip: char*
            port: unsigned short
            dataType: int
            data: char*
            dataLen: unsigned int
            usrParam: int
        </member>
        <member name="T:HaSdkWrapper.HA_DecodeImageCb_t">
             Return Type: void
            cam: HA_Cam*
            rgb: unsigned char*
            width: int
            height: int
            usrParam: int
        </member>
        <member name="T:HaSdkWrapper.HA_ReadTSerialCb_t">
             Return Type: void
            cam: HA_Cam*
            index: int
            data: char*
            size: int
            usrParam: int
        </member>
        <member name="T:HaSdkWrapper.HA_ReadGpioCb_t">
             Return Type: void
            cam: HA_Cam*
            port: int
            inout: int
            state: int
            errNum: int
            resv: char*
        </member>
        <member name="T:HaSdkWrapper.HA_PlateInfoCb_t">
             Return Type: void
            cam: HA_Cam*
            vehicle: pkg_vehicle*
            usrParam: int
        </member>
        <member name="T:HaSdkWrapper.HA_IOStateCb_t">
             Return Type: void
            cam: HA_Cam*
            index: int
            state: int
            usrParam: void*
        </member>
        <member name="T:HaSdkWrapper.HA_OfflineFeeData_t">
             Return Type: void
            cam: HA_Cam*
            pFeeInfo: FeeInfo*
            usrParam: void*
        </member>
        <member name="T:HaSdkWrapper.HA_OfflineQueriedEntryInfoCb_t">
             Return Type: void
            cam: HA_Cam*
            plate: char*
            timeIn: timeval
            flag: int
            usrParam: void*
        </member>
        <member name="T:HaSdkWrapper.HA_OfflineFeeDataQueriedByPageCb_t">
             Return Type: void
            cam: HA_Cam*
            validCount: int
            pFeeInfo: FeeInfoEx*
            startPos: int
            endPos: int
            usrParam: void*
        </member>
        <member name="T:HaSdkWrapper.HA_FaceRecoCb_t">
             Return Type: void
            cam: HA_Cam*
            faceRecoInfo: FaceRecoInfo*
            usrParam: void*
        </member>
        <member name="T:HaSdkWrapper.HA_GpioInputCb_t">
            <summary>
            GPIO输入信号
            </summary>
            <param name="cam"></param>
            <param name="type"></param>
            <param name="data"></param>
            <param name="usrParam"></param>
        </member>
        <member name="T:HaSdkWrapper.HA_QRCodeCb_t">
            <summary>
            获取二维码回调
            </summary>
            <param name="cam"></param>
            <param name="code"></param>
            <param name="usrParam"></param>
            <param name="usrParam"></param>
        </member>
        <member name="T:HaSdkWrapper.HA_FaceQueryCb_t">
             Return Type: void
            cam: HA_Cam*
            faceRecoInfo: QueryFaceInfo*
            usrParam: void*
        </member>
        <member name="F:HaSdkWrapper.timeval.tv_sec">
            int
        </member>
        <member name="F:HaSdkWrapper.timeval.tv_usec">
            int
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.record_count">
            int
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.record_no">
            int
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.personID">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.personName">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.role">
            int
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.feature_count">
            short
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.feature_size">
            short
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.feature">
            unsigned char*
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.imgNum">
            int
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.wgCardNO">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.QueryFaceInfo.effectTime">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.NtpInfo.enable_state">
            short
        </member>
        <member name="F:HaSdkWrapper.NtpInfo.update_cycle">
            short
        </member>
        <member name="F:HaSdkWrapper.NtpInfo.ntp_server">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.NtpInfo.resv">
            char[12]
        </member>
        <member name="F:HaSdkWrapper.SystemTime.time_zone">
            char
        </member>
        <member name="F:HaSdkWrapper.SystemTime.date">
            char[11]
        </member>
        <member name="F:HaSdkWrapper.SystemTime.time">
            char[9]
        </member>
        <member name="F:HaSdkWrapper.SystemTime.resv">
            char[11]
        </member>
        <member name="F:HaSdkWrapper.SystemNetInfo.mac_addr">
            char[18]
        </member>
        <member name="F:HaSdkWrapper.SystemNetInfo.ip_addr">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.SystemNetInfo.netmask">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.SystemNetInfo.gateway">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.SystemNetInfo.resv">
            char[14]
        </member>
        <member name="F:HaSdkWrapper.SystemVersionInfo.dev_id">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.SystemVersionInfo.protocol_ver">
            char[8]
        </member>
        <member name="F:HaSdkWrapper.SystemVersionInfo.firmware_ver">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.SystemVersionInfo.code_ver">
            char[8]
        </member>
        <member name="F:HaSdkWrapper.SystemVersionInfo.build_time">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.SystemVersionInfo.resv1">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FaceImage.img_seq">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceImage.img_fmt">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceImage.img_len">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceImage.width">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceImage.height">
            int
        </member>
        <member name="F:HaSdkWrapper.AuthParam.enable">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.AuthParam.user_name">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.AuthParam.passwd">
            char[17]
        </member>
        <member name="F:HaSdkWrapper.AuthParam.resv">
            char[14]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.dev_no">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.point_no">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.point_name">
            char[96]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.resv1">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.heart_beat_interval">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.extranet_enale">
            char
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.extranet_port">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.extranet_ip">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.verify_enable">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.user_name">
            char[15]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.passwd">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.resv2">
            unsigned char[12]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.upload_mode">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.upload_port">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.upload_ip">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.upload_info">
            char[102]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.cam_mode">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.resv3">
            char[17]
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.match_enable">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.match_score">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.dereplication_enable">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.dereplication_interval">
            int
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.output_mode">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.FaceAppParam.resv4">
            char[256]
        </member>
        <member name="F:HaSdkWrapper.AlarmInfoRecord.cameraID">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.AlarmInfoRecord.alarmTime">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.AlarmInfoRecord.alarmDeviceType">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.AlarmInfoRecord.resv">
            char[3]
        </member>
        <member name="F:HaSdkWrapper.AlarmInfoRecord.personID">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.AlarmInfoRecord.alarmDeviceId">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.AlarmRequest.cameraID">
            char[32]
        </member>
        <member name="F:HaSdkWrapper.AlarmRequest.personID">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.AlarmRequest.requestTime">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.AlarmRequest.alarmDeviceType">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.AlarmRequest.alarmDeviceState">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.AlarmRequest.resv">
            char[2]
        </member>
        <member name="F:HaSdkWrapper.AlarmRequest.alarmDeviceId">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.AlarmRequest.wgCardNOLong">
            <summary>
            韦根门禁卡号加长 在alarmDeviceId长度不满足时使用此成员
            </summary>
        </member>
        <member name="F:HaSdkWrapper.AlarmRequest.body_temp">
            <summary>
            体温
            </summary>
        </member>
        <member name="T:HaSdkWrapper.HA_AlarmRecordCb_t">
             Return Type: void
            cam: void*
            alarmRecord: AlarmInfoRecord*
            usrParam: void*
        </member>
        <member name="T:HaSdkWrapper.HA_AlarmRequestCb_t">
             Return Type: void
            cam: void*
            alarmRequest: AlarmRequest*
            usrParam: void*
        </member>
        <member name="F:HaSdkWrapper.ErrorFaceImage.img_seq">
            int
        </member>
        <member name="F:HaSdkWrapper.ErrorFaceImage.err_code">
            int
        </member>
        <member name="F:HaSdkWrapper.RecordData.record_count">
            int
        </member>
        <member name="F:HaSdkWrapper.RecordData.record_no">
            int
        </member>
        <member name="F:HaSdkWrapper.RecordData.sequence">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.RecordData.tvSec">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.RecordData.tvUsec">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.RecordData.matched">
            short
        </member>
        <member name="F:HaSdkWrapper.RecordData.sex">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.RecordData.age">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.RecordData.person_id">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.RecordData.person_name">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.RecordData.face_image_len">
            int
        </member>
        <member name="F:HaSdkWrapper.RecordData.face_image">
            unsigned char*
        </member>
        <member name="F:HaSdkWrapper.RecordData.faceXInFaceImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RecordData.faceYInFaceImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RecordData.faceWInFaceImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RecordData.faceHInFaceImg">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RecordData.reg_image_len">
            int
        </member>
        <member name="F:HaSdkWrapper.RecordData.reg_image">
            unsigned char*
        </member>
        <member name="F:HaSdkWrapper.RecordData.qvalue">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.RecordData.is_upload">
            char
        </member>
        <member name="F:HaSdkWrapper.RecordData.match_type">
            <summary>
            比对类型 参见MatchType
            </summary>
        </member>
        <member name="F:HaSdkWrapper.RecordData.temperature">
            <summary>
            体温
            </summary>
        </member>
        <member name="F:HaSdkWrapper.QueryMode.QUERY_EXACT">
            QUERY_EXACT -> 0x0
        </member>
        <member name="F:HaSdkWrapper.QueryMode.QUERY_FUZZY">
            QUERY_FUZZY -> 0x1
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.img_flag">
            char
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.reg_img_flag">
            char
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.resv1">
            char[2]
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.query_mode">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.condition_flag">
            unsigned short
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.time_start">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.time_end">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.score_start">
            short
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.score_end">
            short
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.sex">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.age_start">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.age_end">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.resv2">
            char[17]
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.person_id">
            char[20]
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.person_name">
            char[16]
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.qvalue_start">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.qvalue_end">
            unsigned char
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.upload_state">
            char
        </member>
        <member name="F:HaSdkWrapper.RecordCondition.resv3">
            char[65]
        </member>
        <member name="F:HaSdkWrapper.RecordQueryFlag.RECORD_QUERY_FLAG_TIME">
            RECORD_QUERY_FLAG_TIME -> 0x1
        </member>
        <!-- Badly formed XML comment ignored for member "F:HaSdkWrapper.RecordQueryFlag.RECORD_QUERY_FLAG_SCORE" -->
        <!-- Badly formed XML comment ignored for member "F:HaSdkWrapper.RecordQueryFlag.RECORD_QUERY_FLAG_SEX" -->
        <!-- Badly formed XML comment ignored for member "F:HaSdkWrapper.RecordQueryFlag.RECORD_QUERY_FLAG_AGE" -->
        <!-- Badly formed XML comment ignored for member "F:HaSdkWrapper.RecordQueryFlag.RECORD_QUERY_FLAG_ID" -->
        <!-- Badly formed XML comment ignored for member "F:HaSdkWrapper.RecordQueryFlag.RECORD_QUERY_FLAG_NAME" -->
        <!-- Badly formed XML comment ignored for member "F:HaSdkWrapper.RecordQueryFlag.RECORD_QUERY_FLAG_QVALUE" -->
        <!-- Badly formed XML comment ignored for member "F:HaSdkWrapper.RecordQueryFlag.RECORD_QUERY_FLAG_UPLOAD" -->
        <!-- Badly formed XML comment ignored for member "F:HaSdkWrapper.RecordQueryFlag.RECORD_QUERY_FLAG_SEQUENCE" -->
        <member name="F:HaSdkWrapper.SnapshotImage.timeStamp_s">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.SnapshotImage.timeStamp_u">
            unsigned int
        </member>
        <member name="F:HaSdkWrapper.SnapshotImage.snapImageSize">
            int
        </member>
        <member name="F:HaSdkWrapper.SnapshotImage.snapImage">
            unsigned char*
        </member>
        <member name="T:HaSdkWrapper.HA_SnapshotCb_t">
             Return Type: void
            cam: void*
            snapImage: SnapshotImage*
            usrParam: void*
        </member>
        <member name="T:HaSdkWrapper.LcdDisplayItem">
            LCD显示项
        </member>
        <member name="F:HaSdkWrapper.FaceSystemConfigex.FacePrivateParam1">
            <summary>
            私有参数保留字段1
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceSystemConfigex.gpio_enable_white">
            <summary>
            白名单GPIO输出开关（端口1）。1：开 0：关
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceSystemConfigex.FacePrivateParam1_2">
            <summary>
            私有参数保留字段1.2
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceSystemConfigex.FacePrivateParam2">
            <summary>
            私有参数保留字段2
            </summary>
        </member>
        <member name="F:HaSdkWrapper.FaceSystemConfigex.revs">
            <summary>
            剩下所有保留字段
            </summary>
        </member>
        <member name="P:HaSdkWrapper.DeviceDiscoverdEventArgs.IP">
            <summary>
            <para>设备IP</para>
            <EN>Ip address</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.DeviceDiscoverdEventArgs.Mac">
            <summary>
            <para>设备Mac地址</para>
            <EN>Mac address</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.DeviceDiscoverdEventArgs.NetMask">
            <summary>
            <para>子网掩码</para>
            <EN>Subnet mask</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.DeviceDiscoverdEventArgs.Manufacturer">
            <summary>
            <para>厂商</para>
            <EN>Manufacturer of the device</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.DeviceDiscoverdEventArgs.Plateform">
            <summary>
            <para>平台</para>
            <EN>Platform</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.DeviceDiscoverdEventArgs.System">
            <summary>
            <para>系统</para>
            <EN>System</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.DeviceDiscoverdEventArgs.Version">
            <summary>
            <para>版本</para>
            <EN>Version</EN>
            </summary>
        </member>
        <member name="T:HaSdkWrapper.MatchMode">
            <summary>
            比对模式
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_NULL">
            <summary>
            未初始化
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_NORMAL">
            <summary>
            刷脸+白名单开闸
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_IDCARD_1TO1">
            <summary>
            刷脸+刷身份证开闸
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_FACE_IDCARD">
            <summary>
            刷脸+刷身份证+白名单开闸
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_WGCARD">
            <summary>
            刷卡+白名单开闸
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_FACE_WGCARD">
            <summary>
            刷脸+刷卡+白名单开闸
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_ANY_FACE">
            <summary>
            过人开闸
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_NORMAL_OR_WGCARD">
            <summary>
            刷脸+白名单开闸或者刷卡+白名单开闸
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_NORMAL_OR_IDCARD_1TO1">
            <summary>
            /*! 对应--刷脸或刷身份证。 */
            </summary>
        </member>
        <member name="F:HaSdkWrapper.MatchMode.MATCH_MODE_NORMAL_OR_SNAPSHOT">
            <summary>
            /*! 对应--刷脸或RFID全景快照。 */
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Qrcode.code">
            <summary>
            二维码内容
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Qrcode.res">
            <summary>
            保留字段
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.SequenceID">
            <summary>
            抓拍序号，从1开始，每产生一组抓拍数据增加1。
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.CaptureTime">
            <summary>
            抓拍时间
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.IsPersonMatched">
            <summary>
            <para>是否对比到库中的模板</para>
            <para>true表示对比到库中的人 false表示当前抓拍未比中库中模板</para>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.MatchScore">
            <summary>
            相似度
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.PersonID">
            <summary>
            <para>人物编号</para>
            <para>只有对比到人脸才有值</para>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.PersonName">
            <summary>
            <para>人物姓名</para>
            <para>只有对比到人脸才有值</para>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.FeatureImageData">
            <summary>
            <para>特写图数据（JPEG格式图片的全部数据，包括文件头），可能为空表示没有传输特写图</para>
            <para>一般来说特写图就是人脸图，不过不排除是头肩部的截取</para>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.FaceInFeature">
            <summary>
            人脸在特写图中的区域（没有特写图时这个值可能是空值或者默认值）
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.Sex">
            <summary>
            性别 0：未知 1：男 2：女
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.Age">
            <summary>
            年龄 0：未知
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.ModelFaceImageData">
            <summary>
            比中的模板图（JPEG格式图片的全部数据，包括文件头）
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.IsUpload">
            <summary>
            纪录是否已上传 1:表示已经上传 0：表示未上传
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.PersonRole">
            <summary>
            角色 0：普通人员。 1：白名单人员。 2：黑名单人员 -2：无此信息
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordDataEntity.temperature">
            <summary>
            体温
            </summary>
        </member>
        <member name="T:HaSdkWrapper.RecordQueryCondition">
            <summary>
            <para>设备抓拍记录查询条件</para>
            <EN>Face Search Criteria</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.ByCaptureTime">
            <summary>
            <para>是否按抓拍时间</para>
            <EN>Flag to enable TimeStart and TimeEnd field</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.TimeStart">
            <summary>
            <para>抓拍起始时间</para>
            <EN>Starting point of time range, this is used to query offline face capture record</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.TimeEnd">
            <summary>
            <para>抓拍结束时间</para>
            <EN>End point of time range, this is used to query offline face capture record</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.ByCaptureTime2">
            <summary>
            <para>是否按结束时间区间查询</para>
            <EN>Flag to enable TimeStart2 and TimeEnd2</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.TimeStart2">
            <summary>
            <para>有效期结束起始时间</para>
            <EN>Starting point of time range, this is used to query valid to time of face database</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.TimeEnd2">
            <summary>
            <para>有效期结束结束时间</para>
            <EN>End point of time range, this is used to query valid to time of face database</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.ByCaptureTime1">
            <summary>
            <para>是否按起始区间查询</para>
            <EN>Flag to enable TimeStart1 and TimeEnd1</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.Time1Start">
            <summary>
            <para>有效期起始时间</para>
            <EN>Start point of time range, this is used to query valid from time of face database</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.Time1End">
            <summary>
            <para>有效期结束时间</para>
            <EN>End point of time range, this is used to query valid from time of face database</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.ByMatchScore">
            <summary>
            <para>是否通过匹配分数查询</para>
            <EN>Flag to enable MatchScoreStart and MatchScoreEnd field</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.MatchScoreStart">
            <summary>
            <para>匹配分数区间起始值</para>
            <EN>Lower bound of score match range</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.MatchScoreEnd">
            <summary>
            <para>匹配分数区间结束值</para>
            <EN>Upper bound of score match range</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.BySex">
            <summary>
            <para>是否按照性别查询</para>
            <EN>Flag to enable Sex field</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.Sex">
            <summary>
            <para>性别查询条件</para> 1:男 2:女
            <EN>Gender - 1：Male, 2: Female</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.ByAge">
            <summary>
            <para>是否按照年龄查询</para>
            <EN>Flag to enable Age Range</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.AgeStart">
            <summary>
            <para>年龄起始值</para>
            <EN>Lower bound of age range</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.AgeEnd">
            <summary>
            <para>年轻结束值</para>
            <EN>Upper bound of age range</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.ByQValue">
            <summary>
            <para>是否按人脸标准度查询</para>
            <EN>Flag to enable quality of image</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.QValueStart">
            <summary>
            <para>标准度起始值</para>
            <EN>Lower bound of range for quality of image </EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.QValueEnd">
            <summary>
            <para>标准度结束值</para>
            <EN>Upper bound of range for quality of image</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.ByUploadState">
            <summary>
            <para>是否按上传状态查询</para>
            <EN>Flag to enable UploadState field</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.UploadState">
            <summary>
            <para>上传状态过滤条件</para> 1 已上传 2 未上传
            <EN>Upload state - 1: uploaded, 2: not uploaded</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.FuzzyMode">
            <summary>
            <para>是否开启模糊查询</para>（只支持用户编号和姓名）
            <EN>Flag to enable fuzzy matching mode (only face id and name are supported)</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.ById">
            <summary>
            <para>是否按用户编号查询</para>
            <EN>Flag to enable PersonId field</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.PersonId">
            <summary>
            <para>用户编号查询内容</para>
            <EN>Id</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.ByName">
            <summary>
            <para>是否按用户姓名查询</para>
            <EN>Flag to enable PersonName field</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.PersonName">
            <summary>
            <para>用户姓名查询内容</para>
            <EN>Name</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.WgNo">
            <summary>
            <para>通过韦根卡号查询查询</para>
            <EN>Flag to enable WgNoc field</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.RecordQueryCondition.WgNoc">
            <summary>
            <para>韦根卡号查询内容</para>
            <EN>Wiegand Card Number</EN>
            </summary>
        </member>
        <member name="P:HaSdkWrapper.SerialParameter.Baudrate">
            <summary>
            波特率；只能为以下值：1200, 2400, 4800, 9600, 14400, 19200, 38400, 56000, 57600, 115200, 128000, 256000
            </summary>
        </member>
        <member name="P:HaSdkWrapper.SerialParameter.Parity">
            <summary>
            校验位；0:none, 1:odd, 2:even, 3:mark, 4:space
            </summary>
        </member>
        <member name="P:HaSdkWrapper.SerialParameter.Databit">
            <summary>
            数据位；只能为5，6，7，8
            </summary>
        </member>
        <member name="P:HaSdkWrapper.SerialParameter.Stopbit">
            <summary>
            停止位；只能为1，2
            </summary>
        </member>
        <member name="T:HaSdkWrapper.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_ABERRATION_TOO_BIG">
            <summary>
              Looks up a localized string similar to 可见光红外光像差过大.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_ANGLE_PITCH">
            <summary>
              Looks up a localized string similar to 人脸俯仰角太大.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_ANGLE_ROLL">
            <summary>
              Looks up a localized string similar to 人脸不正.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_ANGLE_YAW">
            <summary>
              Looks up a localized string similar to 人脸侧偏角太大.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_APP_REBOOT">
            <summary>
              Looks up a localized string similar to 重启应用程序失败.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_AUTH_FAILED">
            <summary>
              Looks up a localized string similar to 认证失败.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_ENCODE_JPG">
            <summary>
              Looks up a localized string similar to 压缩图像失败.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_EXTRACT_FEATURE">
            <summary>
              Looks up a localized string similar to 提取特征失败.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_FACE_ID_NOT_EXITS">
            <summary>
              Looks up a localized string similar to 修改人脸特征失败（未找到对应ID）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_FACE_ID_REPEAT">
            <summary>
              Looks up a localized string similar to 添加人员失败（人员id重复）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_FACE_INCOMPLETE">
            <summary>
              Looks up a localized string similar to 图像中人脸不完整.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_FACES_NUM">
            <summary>
              Looks up a localized string similar to 单个人员最大支持5张图像.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_GET_FACE_FEATURE">
            <summary>
              Looks up a localized string similar to 提取人脸特征失败（须保证图像中有且仅有一张人脸）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_GET_FACE_ID">
            <summary>
              Looks up a localized string similar to 查询人脸失败（无当前记录）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_GET_FACE_INIT">
            <summary>
              Looks up a localized string similar to 人脸提取器未初始化（请调用HA_InitFaceModel初始化）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_IMAGE_DECODE">
            <summary>
              Looks up a localized string similar to 图像解码失败.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_IMAGE_PATH">
            <summary>
              Looks up a localized string similar to 文件不存在，请检查图片路径是否正确.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_IMAGE_SIZE">
            <summary>
              Looks up a localized string similar to 图像太大，用于提取特征的jpg图像不能超过10M，下发到相机的jpg图像 宽高不能超过128x128.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_INFRARED_TARGET">
            <summary>
              Looks up a localized string similar to 未检出指定个数红外光目标.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_INVALID_PARAM">
            <summary>
              Looks up a localized string similar to 参数非法（缺失或错误的参数）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_INVALID_SYNC_MODE">
            <summary>
              Looks up a localized string similar to 无效的同步操作.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_LACK_TWISTIMGE">
            <summary>
              Looks up a localized string similar to 缺少归一化图像.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_MIN_FACE">
            <summary>
              Looks up a localized string similar to 人脸尺寸太小，人脸轮廓必须大于96*96.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_MOUTH_OPEN">
            <summary>
              Looks up a localized string similar to 张嘴幅度过大.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_NONE">
            <summary>
              Looks up a localized string similar to 操作成功.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_NOT_IMPLEMENTED">
            <summary>
              Looks up a localized string similar to 未实现（设备版本较低不支持当前操作）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_PACKET_DATA">
            <summary>
              Looks up a localized string similar to 请求数据包包含不合法字段.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_PROTOCAL_VER">
            <summary>
              Looks up a localized string similar to 协议版本不匹配，请确认SDK和相机固件版本.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_PTZ_CTRL">
            <summary>
              Looks up a localized string similar to 不支持的云台控制，目前只支持5：变倍（放大） 6：变倍（缩小） 7：聚焦（拉近） 8：聚焦（拉远）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_PTZ_CTRL_MODE">
            <summary>
              Looks up a localized string similar to 不支持的控制模式，1：一次运动 2：启动 3：停止.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_QVALUE_TOO_SMALL">
            <summary>
              Looks up a localized string similar to 人像质量太差不满足注册条件.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_READ_DATA">
            <summary>
              Looks up a localized string similar to 读取数据失败.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_REPLYCODE_FEATURE_VERSION">
            <summary>
              Looks up a localized string similar to 特征数据版本不匹配.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_REQUEST_CMD">
            <summary>
              Looks up a localized string similar to 不支持的操作请求.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_SAVE_IMG_NUM">
            <summary>
              Looks up a localized string similar to 目前相机只支持存一张模板图像，pictureFlags必须&lt;=1.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_SERIAL_INDEX">
            <summary>
              Looks up a localized string similar to 错误的串口编号（目前只支持HA_SERIAL_RS485和HA_SERIAL_RS232）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_SYS_NOT_MATCH">
            <summary>
              Looks up a localized string similar to 系统不匹配（操作设备不是人脸抓拍相机）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_SYSTEM_BUSY">
            <summary>
              Looks up a localized string similar to 操作系统繁忙.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_SYSTEM_REBOOT">
            <summary>
              Looks up a localized string similar to 重启系统失败.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_TIMEOUT">
            <summary>
              Looks up a localized string similar to 操作超时（设备在规定时间内未响应当前操作）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_TOO_MUCH_FACE">
            <summary>
              Looks up a localized string similar to 图像中人脸数不为1.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_TWIST_FACE">
            <summary>
              Looks up a localized string similar to 归一化图像失败.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_UNCONNECTED">
            <summary>
              Looks up a localized string similar to 未连接（网络问题）.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_UNDEFINED">
            <summary>
              Looks up a localized string similar to 未知错误.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_UPPER_LIMIT">
            <summary>
              Looks up a localized string similar to 人员数量已达上限.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_VERSION_MATCH">
            <summary>
              Looks up a localized string similar to 版本不匹配.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_VISIBLE_TARGET">
            <summary>
              Looks up a localized string similar to 未检出指定个数可见光目标.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_WG_QUERY_MODE">
            <summary>
              Looks up a localized string similar to 韦根卡号不支持模糊查询.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_WRITE_DATA">
            <summary>
              Looks up a localized string similar to 写入数据失败.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.Strings.ERR_YINYANG_FACE">
            <summary>
              Looks up a localized string similar to 光照不均匀.
            </summary>
        </member>
        <member name="P:HaSdkWrapper.WeiGangno.type">
            <summary>
            type GPIO的输入信号类型，255:gpio   0:WG26 1:WG34
            </summary>
        </member>
        <member name="P:HaSdkWrapper.WeiGangno.data">
            <summary>
            输入类型为gpio时，该值表示gpio端口号。输入类型为韦根信号时，该值为韦根协议门禁卡号
            </summary>
        </member>
    </members>
</doc>
