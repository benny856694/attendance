<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="AllDriveIsNotAvailable" xml:space="preserve">
    <value>No driver is available for storing data</value>
  </data>
	<data name="TakePicture" xml:space="preserve">
    <value>Take Photo</value>
  </data>
	<data name="Camera" xml:space="preserve">
		<value>Camera</value>
	</data>
	<data name="PromptSwitchingCamera" xml:space="preserve">
		<value>Switching...</value>
	</data>
	<data name="Switch" xml:space="preserve">
		<value>Switch</value>
	</data>
	<data name="StaffCodeExists" xml:space="preserve">
		<value>Employee number already exists</value>
	</data>
	<data name="StaffCodeIsEmpty" xml:space="preserve">
		<value>Employee number cannot be empty</value>
	</data>
	<data name="StaffImageInValid" xml:space="preserve">
		<value>The photo is not valid</value>
	</data>
	<data name="SaveFailed" xml:space="preserve">
		<value>Save succeeded</value>
	</data>
	<data name="SaveSuccess" xml:space="preserve">
		<value>Save failed</value>
	</data>
	<data name="Absent" xml:space="preserve">
		<value>Yes</value>
	</data>
	<data name="AttendanceKeys" xml:space="preserve">
		<value>name,department,Employee_code,Date,Punchinformation,Punchinformation1,Shiftinformation,Duration,late,Leaveearly,workOvertime,isAbsenteeism,temperature</value>
	</data>
	<data name="AttendanceNames" xml:space="preserve">
		<value>Name,Department,Employee Number,Attendance Date,Clock in,Clock out,Shift Information,Attendance Time (hours),Late (minutes),Early Leave (minutes),Overtime (minutes),Absenteeism,Body Temperature (℃)</value>
	</data>
	<data name="DayOff" xml:space="preserve">
		<value>Yes</value>
	</data>
	<data name="ImageMissing" xml:space="preserve">
		<value>Picture missing</value>
	</data>
	<data name="DeviceOffline" xml:space="preserve">
		<value>Device offline</value>
	</data>
	<data name="StaffNames" xml:space="preserve">
		<value>Name,Email,Telephone number,Employee number,Photo path,Create date,ID number,Access control card number,Access control card length,Department,Staff type</value>
	</data>
	<data name="InitializingDb" xml:space="preserve">
		<value>Initializing Database...</value>
	</data>
	<data name="InitializeDbFailed" xml:space="preserve">
		<value>Initialize Database Error</value>
	</data>
	<data name="LoginInProgress" xml:space="preserve">
		<value>Login...</value>
	</data>
	<data name="LoginSucceed" xml:space="preserve">
		<value>Login Succeed</value>
	</data>
	<data name="LoginFailed" xml:space="preserve">
		<value>Login Failed</value>
	</data>
	<data name="ConnectDbFailed" xml:space="preserve">
		<value>Connect Database Failed: {0}</value>
	</data>
	<data name="UsernameOrPasswordIncorrect" xml:space="preserve">
		<value>User Name or Password Error</value>
	</data>
	<data name="UsernameEmpty" xml:space="preserve">
		<value>Username Can't be empty</value>
	</data>
	<data name="PasswordEmpty" xml:space="preserve">
		<value>Password can't be empty</value>
	</data>
	<data name="ExceptionOccurred" xml:space="preserve">
		<value>Exception: {0}</value>
	</data>
	<data name="ChangePassword" xml:space="preserve">
		<value>Change Password</value>
	</data>
	<data name="ConfirmNewPassword" xml:space="preserve">
		<value>Confirm New Password</value>
	</data>
	<data name="ConfirmNewPasswordMismatch" xml:space="preserve">
		<value>New Password doesn't match</value>
	</data>
	<data name="NewPassword" xml:space="preserve">
		<value>New Password</value>
	</data>
	<data name="NewPasswordCanotBeSameAsOld" xml:space="preserve">
		<value>New password is same as old password</value>
	</data>
	<data name="RememberPassword" xml:space="preserve">
		<value>Remember Password</value>
	</data>
	<data name="CaptureDataExportDefaultFileName" xml:space="preserve">
		<value>Attendance Record</value>
	</data>
	<data name="CaptureRecordColumnNames" xml:space="preserve">
		<value>full name,ID,device name,clock-in time,match score,Access card number,match fail reason,mask,temperature,device serial number,ID card number,ID card name,Health code status,trip information,image path</value>
	</data>
	<data name="GreenCode" xml:space="preserve">
		<value>  </value>
	</data>
	<data name="RedCode" xml:space="preserve">
		<value>  </value>
	</data>
	<data name="YellowCode" xml:space="preserve">
		<value>  </value>
	</data>
	<data name="Yes" xml:space="preserve">
		<value>Yes</value>
	</data>
	<data name="ExportFileFailedWithError" xml:space="preserve">
		<value>Export File Failed: {0}</value>
	</data>
	<data name="ExportFileSucceed" xml:space="preserve">
		<value>Export File Succeed</value>
	</data>
	<data name="ExcelFile" xml:space="preserve">
		<value>Excel File (*.xlsx)|*.xlsx</value>
	</data>
</root>